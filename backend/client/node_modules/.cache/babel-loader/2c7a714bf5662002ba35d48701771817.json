{"ast":null,"code":"import { EMPLOYEE_CREATED_SUCCESS } from \"./EmployeeActions\";\nexport const GET_NOTES = \"GET_NOTES\";\nexport const GET_NOTES_SUCCESS = \"GET_NOTES_SUCCESS\";\nexport const GET_NOTES_FAILURE = \"GET_NOTES_FAILURE\";\nexport const getNotes = () => ({\n  type: GET_NOTES\n});\nexport const GetNotesSuccess = notes => ({\n  type: GET_NOTES_SUCCESS,\n  payload: notes\n});\n_c = GetNotesSuccess;\nexport const getNotesFailure = error => ({\n  type: GET_NOTES_FAILURE,\n  payload: error\n});\nexport const fecthAllEmployeeNotes = employee_id => {\n  return disptach => {\n    dispatch(getNotes);\n    fetch(`http://localhost:3001/employees/${employee_id}/notes`).then(response => response.json()).then(data => {\n      dispatch(GetNotesSuccess(data));\n    }).catch(error => {\n      dispatch(getNotesFailure(error));\n    });\n  };\n};\nexport const noteCreatedSuccess = note => ({\n  type: NOTE_CREATED_SUCCESS,\n  payload: note\n});\nexport const notecreatedFailure = error => ({\n  type: NOTE_CREATED_FAILURE,\n  payload: error\n});\nexport const fetchPostNewNote = note => {\n  return dispatch => {\n    fetch(`http://localhost:3001/employees/${note.employee_id}/notes`, {\n      method: 'POST',\n      body: JSON.stringify(note),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      dispatch(noteCreatedSuccess(data));\n    }).catch(error => {\n      dispatch(notecreatedFailure(error));\n    });\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GetNotesSuccess\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/actions/NoteActions.js"],"names":["EMPLOYEE_CREATED_SUCCESS","GET_NOTES","GET_NOTES_SUCCESS","GET_NOTES_FAILURE","getNotes","type","GetNotesSuccess","notes","payload","getNotesFailure","error","fecthAllEmployeeNotes","employee_id","disptach","dispatch","fetch","then","response","json","data","catch","noteCreatedSuccess","note","NOTE_CREATED_SUCCESS","notecreatedFailure","NOTE_CREATED_FAILURE","fetchPostNewNote","method","body","JSON","stringify","headers"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,mBAAzC;AAEA,OAAO,MAAMC,SAAS,GAAY,WAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAI,mBAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,QAAQ,GAAG,OACpB;AAAEC,EAAAA,IAAI,EAAEJ;AAAR,CADoB,CAAjB;AAIP,OAAO,MAAMK,eAAe,GAAIC,KAAD,KAC3B;AAAEF,EAAAA,IAAI,EAAEH,iBAAR;AAA2BM,EAAAA,OAAO,EAAED;AAApC,CAD2B,CAAxB;KAAMD,e;AAIb,OAAO,MAAMG,eAAe,GAAIC,KAAD,KAC3B;AAAEL,EAAAA,IAAI,EAAEF,iBAAR;AAA2BK,EAAAA,OAAO,EAAEE;AAApC,CAD2B,CAAxB;AAIP,OAAO,MAAMC,qBAAqB,GAAIC,WAAD,IAAiB;AAClD,SAAQC,QAAD,IAAc;AACjBC,IAAAA,QAAQ,CAACV,QAAD,CAAR;AACAW,IAAAA,KAAK,CAAE,mCAAkCH,WAAY,QAAhD,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVL,MAAAA,QAAQ,CAACR,eAAe,CAACa,IAAD,CAAhB,CAAR;AACH,KAJD,EAKCC,KALD,CAKOV,KAAK,IAAI;AACZI,MAAAA,QAAQ,CAACL,eAAe,CAACC,KAAD,CAAhB,CAAR;AACH,KAPD;AAQH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMW,kBAAkB,GAAIC,IAAD,KAC9B;AAAEjB,EAAAA,IAAI,EAAEkB,oBAAR;AAA8Bf,EAAAA,OAAO,EAAEc;AAAvC,CAD8B,CAA3B;AAIP,OAAO,MAAME,kBAAkB,GAAId,KAAD,KAC9B;AAAEL,EAAAA,IAAI,EAAEoB,oBAAR;AAA8BjB,EAAAA,OAAO,EAAEE;AAAvC,CAD8B,CAA3B;AAIP,OAAO,MAAMgB,gBAAgB,GAAIJ,IAAD,IAAU;AACtC,SAAQR,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,mCAAkCO,IAAI,CAACV,WAAY,QAArD,EAA8D;AAC/De,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFyD;AAG/DS,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHsD,KAA9D,CAAL,CAKCf,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMMG,IAAI,IAAI;AACVL,MAAAA,QAAQ,CAACO,kBAAkB,CAACF,IAAD,CAAnB,CAAR;AACH,KARD,EASCC,KATD,CASOV,KAAK,IAAI;AACZI,MAAAA,QAAQ,CAACU,kBAAkB,CAACd,KAAD,CAAnB,CAAR;AACH,KAXD;AAYH,GAbD;AAcH,CAfM","sourcesContent":["import { EMPLOYEE_CREATED_SUCCESS } from \"./EmployeeActions\"\n\nexport const GET_NOTES          = \"GET_NOTES\"\nexport const GET_NOTES_SUCCESS  = \"GET_NOTES_SUCCESS\"\nexport const GET_NOTES_FAILURE = \"GET_NOTES_FAILURE\"\n\nexport const getNotes = () => (\n    { type: GET_NOTES }\n)\n\nexport const GetNotesSuccess = (notes) => (\n    { type: GET_NOTES_SUCCESS, payload: notes }\n)\n\nexport const getNotesFailure = (error) => (\n    { type: GET_NOTES_FAILURE, payload: error }\n)\n\nexport const fecthAllEmployeeNotes = (employee_id) => {\n    return (disptach) => {\n        dispatch(getNotes)\n        fetch(`http://localhost:3001/employees/${employee_id}/notes`)\n        .then(response => response.json())\n        .then(data => {\n            dispatch(GetNotesSuccess(data))\n        })\n        .catch(error => {\n            dispatch(getNotesFailure(error))\n        })\n    }\n}\n\nexport const noteCreatedSuccess = (note) => (\n    { type: NOTE_CREATED_SUCCESS, payload: note }\n)\n\nexport const notecreatedFailure = (error) => (\n    { type: NOTE_CREATED_FAILURE, payload: error }\n)\n\nexport const fetchPostNewNote = (note) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3001/employees/${note.employee_id}/notes`, {\n            method: 'POST',\n            body: JSON.stringify(note),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(response => response.json())\n        .then(data => {\n            dispatch(noteCreatedSuccess(data))\n        })\n        .catch(error => {\n            dispatch(notecreatedFailure(error))\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}