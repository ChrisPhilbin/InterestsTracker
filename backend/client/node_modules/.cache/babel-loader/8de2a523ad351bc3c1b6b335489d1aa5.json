{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/static/EmployeeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllEmployees } from '../actions/EmployeeActions';\nimport Container from '@material-ui/core/Container';\nimport EmployeeCard from '../components/employees/EmployeeCard';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeList = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  let loading = useSelector(state => state.employees.loading);\n  let hasErrors = useSelector(state => state.employees.hasErrors);\n  let employees = useSelector(state => state.employees.employees);\n  useEffect(() => {\n    dispatch(fetchAllEmployees());\n  }, [dispatch]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading... Please wait\"\n    }, void 0, false);\n  } else if (hasErrors) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Error. Something went wrong!\"\n    }, void 0, false);\n  } else if (employees) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        columns: '2 auto'\n      },\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(EmployeeCard, {\n        employee: employee\n      }, employee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(EmployeeList, \"hw1xdsP/9biG6MsVlJZ6JPiIlS8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EmployeeList;\nexport default EmployeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/static/EmployeeList.js"],"names":["React","useEffect","useDispatch","useSelector","fetchAllEmployees","Container","EmployeeCard","EmployeeList","dispatch","loading","state","employees","hasErrors","columns","map","employee","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AAEA,MAAIO,OAAO,GAAKN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,OAA1B,CAA3B;AACA,MAAIG,SAAS,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,SAA1B,CAA3B;AACA,MAAID,SAAS,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBA,SAA1B,CAA3B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;AACH,GAFQ,EAEP,CAACI,QAAD,CAFO,CAAT;;AAKA,MAAIC,OAAJ,EAAa;AACT,wBACI;AAAA;AAAA,qBADJ;AAKH,GAND,MAMO,IAAIG,SAAJ,EAAe;AAClB,wBACI;AAAA;AAAA,qBADJ;AAKH,GANM,MAMA,IAAID,SAAJ,EAAe;AAClB,wBACA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAlB;AAAA,gBACKF,SAAS,CAACG,GAAV,CAAeC,QAAD,iBACX,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEA;AAAxB,SAAuCA,QAAQ,CAACC,EAAhD;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADA;AAOH;AACJ,CAlCD;;GAAMT,Y;UAEaL,W,EAECC,W,EACAA,W,EACAA,W;;;KANdI,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchAllEmployees } from '../actions/EmployeeActions'\nimport Container from '@material-ui/core/Container'\nimport EmployeeCard from '../components/employees/EmployeeCard'\n\nconst EmployeeList = () => {\n\n    let dispatch = useDispatch()\n\n    let loading   = useSelector(state => state.employees.loading)\n    let hasErrors = useSelector(state => state.employees.hasErrors)\n    let employees = useSelector(state => state.employees.employees)\n\n    useEffect(() => {\n        dispatch(fetchAllEmployees())\n    },[dispatch])\n\n\n    if (loading) {\n        return(\n            <>\n                Loading... Please wait\n            </>\n        )\n    } else if (hasErrors) {\n        return(\n            <>\n                Error. Something went wrong!\n            </>\n        )\n    } else if (employees) {\n        return(\n        <Container style={{columns: '2 auto'}}>\n            {employees.map((employee) => (\n                <EmployeeCard employee={employee} key={employee.id}/>\n            ))}\n        </Container>\n        )\n    }\n}\n\nexport default EmployeeList"]},"metadata":{},"sourceType":"module"}