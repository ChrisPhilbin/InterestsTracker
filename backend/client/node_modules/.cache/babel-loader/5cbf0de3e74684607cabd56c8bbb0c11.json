{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/employees/EditEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOneEmployee } from '../../actions/EmployeeActions';\nimport ShowLoading from '../../util/ShowLoading';\nimport useFormatDate from '../../hooks/useFormatDate';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditEmployee = props => {\n  _s();\n\n  const employee_id = props.match.params.employee_id;\n  let loading = useSelector(state => state.employees.loading);\n  let employee = useSelector(state => state.employees.employee);\n  let hasErrors = useSelector(state => state.employees.hasErrors);\n  useEffect(() => {\n    dispatch(fetchOneEmployee(employee_id));\n  }, [dispatch, employee_id]);\n\n  const handleSubmit = () => {\n    alert(\"Editing!\");\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (Object.keys(employee).length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          padding: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: [\"Editing details for \", employee.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"fullname\",\n            label: \"Full name\",\n            initialValues: employee.name,\n            onChange: e => setEmployee({ ...employee,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              disableToolbar: true,\n              variant: \"inline\",\n              format: \"MM/dd/yyyy\",\n              margin: \"normal\",\n              id: \"date-picker-inline\",\n              value: employee.hire_date,\n              onChange: date => setEmployee({ ...employee,\n                hire_date: date\n              }),\n              label: \"Hire date\",\n              KeyboardButtonProps: {\n                'aria-label': 'change date'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              marginTop: 15\n            },\n            onClick: () => handleSubmit(),\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(EditEmployee, \"cgkuP+wBl5tYeVCaj0v6XBJGN6w=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = EditEmployee;\nexport default EditEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEmployee\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/employees/EditEmployee.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchOneEmployee","ShowLoading","useFormatDate","Grid","Typography","TextField","Button","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","EditEmployee","props","employee_id","match","params","loading","state","employees","employee","hasErrors","dispatch","handleSubmit","alert","Object","keys","length","padding","name","e","setEmployee","target","value","hire_date","date","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,UAAP;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,uBADF,EAEEC,kBAFF,QAGO,sBAHP;;;;AAKA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAMC,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,WAAvC;AAEA,MAAIG,OAAO,GAAKhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,OAA1B,CAA3B;AACA,MAAIG,QAAQ,GAAInB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,QAA1B,CAA3B;AACA,MAAIC,SAAS,GAAGpB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBE,SAA1B,CAA3B;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,QAAQ,CAACpB,gBAAgB,CAACY,WAAD,CAAjB,CAAR;AACH,GAFQ,EAEN,CAACQ,QAAD,EAAWR,WAAX,CAFM,CAAT;;AAIA,QAAMS,YAAY,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,UAAD,CAAL;AACH,GAFD;;AAIA,MAAIP,OAAJ,EAAa;AACT,wBACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,MAAIQ,MAAM,CAACC,IAAP,CAAYN,QAAZ,EAAsBO,MAA1B,EAAkC;AAC9B,wBACI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAb;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,YAAY,MAArC;AAAA,6CAA2DR,QAAQ,CAACS,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,KAAK,EAAC,WAFV;AAII,YAAA,aAAa,EAAET,QAAQ,CAACS,IAJ5B;AAKI,YAAA,QAAQ,EAAGC,CAAD,IAAOC,WAAW,CAAC,EAAC,GAAGX,QAAJ;AAAcS,cAAAA,IAAI,EAAEC,CAAC,CAACE,MAAF,CAASC;AAA7B,aAAD;AALhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAeI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,uBAAD;AAAyB,YAAA,KAAK,EAAExB,YAAhC;AAAA,mCACI,QAAC,kBAAD;AACI,cAAA,cAAc,MADlB;AAEI,cAAA,OAAO,EAAC,QAFZ;AAGI,cAAA,MAAM,EAAC,YAHX;AAII,cAAA,MAAM,EAAC,QAJX;AAKI,cAAA,EAAE,EAAC,oBALP;AAMI,cAAA,KAAK,EAAEW,QAAQ,CAACc,SANpB;AAOI,cAAA,QAAQ,EAAGC,IAAD,IAAUJ,WAAW,CAAC,EAAC,GAAGX,QAAJ;AAAcc,gBAAAA,SAAS,EAAEC;AAAzB,eAAD,CAPnC;AAQI,cAAA,KAAK,EAAC,WARV;AASI,cAAA,mBAAmB,EAAE;AACjB,8BAAc;AADG;AATzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAiCI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAA4C,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAnD;AAAsE,YAAA,OAAO,EAAE,MAAMb,YAAY,EAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAyCH;AACJ,CAjED;;GAAMX,Y;UAIcX,W,EACAA,W,EACAA,W;;;KANdW,Y;AAmEN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchOneEmployee } from '../../actions/EmployeeActions'\nimport ShowLoading from '../../util/ShowLoading'\nimport useFormatDate from '../../hooks/useFormatDate'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\n\nconst EditEmployee = (props) => {\n\n    const employee_id = props.match.params.employee_id\n\n    let loading   = useSelector(state => state.employees.loading)\n    let employee  = useSelector(state => state.employees.employee)\n    let hasErrors = useSelector(state => state.employees.hasErrors)\n\n    useEffect(() => {\n        dispatch(fetchOneEmployee(employee_id))\n    }, [dispatch, employee_id])\n\n    const handleSubmit = () => {\n        alert(\"Editing!\")\n    }\n\n    if (loading) {\n        return(\n            <ShowLoading />\n        )\n    }\n    \n    if (Object.keys(employee).length) {\n        return (\n            <>\n                <Grid style={{ padding: 40 }}>\n                    <Typography variant=\"h4\" gutterBottom>Editing details for {employee.name}</Typography>\n\n                    <Grid item>\n                        <TextField\n                            id=\"fullname\"\n                            label=\"Full name\"\n                            \n                            initialValues={employee.name}\n                            onChange={(e) => setEmployee({...employee, name: e.target.value})}\n                            \n                        />\n                    </Grid>\n\n\n                    <Grid item>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                            <KeyboardDatePicker\n                                disableToolbar\n                                variant=\"inline\"\n                                format=\"MM/dd/yyyy\"\n                                margin=\"normal\"\n                                id=\"date-picker-inline\"\n                                value={employee.hire_date}\n                                onChange={(date) => setEmployee({...employee, hire_date: date})}\n                                label=\"Hire date\"                           \n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n\n                    <Grid item>\n                        <Button variant=\"contained\" color=\"primary\" style={{ marginTop: 15 }} onClick={() => handleSubmit()}>Save changes</Button>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default EditEmployee"]},"metadata":{},"sourceType":"module"}