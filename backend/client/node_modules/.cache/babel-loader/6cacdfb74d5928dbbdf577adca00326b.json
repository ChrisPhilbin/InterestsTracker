{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/sports/DisplayAllEmployeeSports.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployeeSports, fetchPostNewSport, fetchDeleteSport } from '../../actions/SportActions';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typoegraphy from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShowLoading from '../../util/ShowLoading';\nimport ShowErrors from '../../util/ShowErrors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  addItemIcon: {\n    float: 'right',\n    bottom: '0px',\n    left: 0\n  },\n  widget: {\n    padding: 15,\n    borderRadius: 15\n  }\n}));\n\nconst DisplayAllEmployeeSports = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const employee_id = props.employee_id;\n  useEffect(() => {\n    dispatch(fetchEmployeeSports(employee_id));\n  }, [dispatch]);\n  let [open, setOpen] = useState(false);\n  let [newSport, setNewSport] = useState('');\n  let [newSportCity, setNewSportCity] = useState('');\n  let sports = useSelector(state => state.sports.sports);\n  let loading = useSelector(state => state.sports.loading);\n  let hasErrors = useSelector(state => state.sports.hasErrors);\n\n  const handleSubmit = () => {\n    let sportSubmit = {\n      name: newSport,\n      city: newSportCity,\n      employee_id: employee_id\n    };\n    dispatch(fetchPostNewSport(sportSubmit));\n    setOpen(false);\n  };\n\n  const handleDelete = pet_id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(fetchDeleteSport(employee_id, pet_id));\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  } else if (hasErrors) {\n    return /*#__PURE__*/_jsxDEV(ShowErrors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  } else if (sports) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: () => setOpen(false),\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Add a new sports team and their city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Add a new city name and sports team below (Example: \\\"New York Rangers\\\")\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Sports team name\",\n            fullWidth: true,\n            onChange: e => setNewSport(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"City\",\n            fullWidth: true,\n            onChange: e => setNewSportCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleSubmit(),\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.addItemIcon,\n        color: \"primary\",\n        \"aria-label\": \"Add new pet\",\n        onClick: () => setOpen(true),\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          style: {\n            fontSize: 30\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.widget,\n        square: false,\n        children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n          variant: \"h5\",\n          style: {\n            textAlign: 'center'\n          },\n          gutterBottom: true,\n          children: \"Pets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: sports.map(sport => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n                style: {\n                  size: 10,\n                  color: 'red'\n                },\n                onClick: () => handleDelete(sport.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${sport.city} ${sport.teamname}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 146\n            }, this)]\n          }, sport.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DisplayAllEmployeeSports, \"2dLh5o1wvS6APsEL0M7ivYpZNlY=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector, useSelector];\n});\n\n_c = DisplayAllEmployeeSports;\nexport default DisplayAllEmployeeSports;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllEmployeeSports\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/sports/DisplayAllEmployeeSports.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchEmployeeSports","fetchPostNewSport","fetchDeleteSport","List","ListItem","ListItemText","Paper","IconButton","AddCircleIcon","Typoegraphy","makeStyles","ShowLoading","ShowErrors","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Button","HighlightOffIcon","useStyles","theme","addItemIcon","float","bottom","left","widget","padding","borderRadius","DisplayAllEmployeeSports","props","dispatch","classes","employee_id","open","setOpen","newSport","setNewSport","newSportCity","setNewSportCity","sports","state","loading","hasErrors","handleSubmit","sportSubmit","name","city","handleDelete","pet_id","window","confirm","e","target","value","fontSize","textAlign","map","sport","size","color","id","teamname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchEmployeeSports, fetchPostNewSport, fetchDeleteSport } from '../../actions/SportActions'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport Typoegraphy from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ShowLoading from '../../util/ShowLoading'\nimport ShowErrors from '../../util/ShowErrors'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\n\nconst useStyles = makeStyles((theme) => ({\n    addItemIcon: {\n        float: 'right',\n        bottom: '0px',\n        left: 0\n    },\n    widget: {\n        padding: 15,\n        borderRadius: 15\n    }\n}))\n\nconst DisplayAllEmployeeSports = (props) => {\n\n    const dispatch = useDispatch()\n\n    const classes = useStyles()\n\n    const employee_id = props.employee_id\n\n    useEffect(() => {\n        dispatch(fetchEmployeeSports(employee_id))\n    },[dispatch])\n\n    let [open, setOpen]               = useState(false)\n    let [newSport, setNewSport]           = useState('')\n    let [newSportCity, setNewSportCity]   = useState('')\n\n    let sports     = useSelector(state => state.sports.sports)\n    let loading    = useSelector(state => state.sports.loading)\n    let hasErrors  = useSelector(state => state.sports.hasErrors)\n\n    const handleSubmit = () => {\n        let sportSubmit = {\n            name: newSport,\n            city: newSportCity,\n            employee_id: employee_id\n        }\n        dispatch(fetchPostNewSport(sportSubmit))\n        setOpen(false)\n    }\n\n    const handleDelete = pet_id => {\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(fetchDeleteSport(employee_id, pet_id))\n        }\n    }\n\n    if (loading) {\n        return(\n            <ShowLoading />\n        )\n    } else if (hasErrors) {\n        return(\n            <ShowErrors />\n        )\n    } else if (sports) {\n        return(\n            <>\n                <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Add a new sports team and their city</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Add a new city name and sports team below (Example: \"New York Rangers\")\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Sports team name\"\n                            fullWidth\n                            onChange={(e) => setNewSport(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"City\"\n                            fullWidth\n                            onChange={(e) => setNewSportCity(e.target.value)}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleSubmit()} color=\"primary\">\n                        Save\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <IconButton\n                    className={classes.addItemIcon}\n                    color=\"primary\"\n                    aria-label=\"Add new pet\"\n                    onClick={() => setOpen(true)}\n                >\n                    <AddCircleIcon style={{ fontSize: 30 }} />\n                </IconButton>\n                \n                <Paper elevation={3} className={classes.widget} square={false}>\n                    <Typoegraphy variant=\"h5\" style={{textAlign: 'center'}} gutterBottom>Pets</Typoegraphy>\n                    <List dense={true}>\n                        {sports.map((sport) => (\n                            <ListItem key={sport.id}>\n                                <span><HighlightOffIcon style={{ size: 10, color: 'red' }} onClick={() => handleDelete(sport.id)} /></span>&nbsp;<ListItemText primary={`${sport.city} ${sport.teamname}`} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Paper>\n            </>\n        )\n    }\n}\n\nexport default DisplayAllEmployeeSports"]},"metadata":{},"sourceType":"module"}