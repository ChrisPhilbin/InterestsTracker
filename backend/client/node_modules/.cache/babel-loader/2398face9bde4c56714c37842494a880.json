{"ast":null,"code":"import * as actions from '../actions/NoteActions';\nexport const initialNotesState = {\n  notes: [],\n  note: {},\n  loading: false,\n  hasErrors: false\n};\nexport default function notesReducer(state = initialNotesState, action) {\n  switch (action.type) {\n    case actions.GET_NOTES:\n      return { ...state,\n        loading: true\n      };\n\n    case actions.GET_NOTES_SUCCESS:\n      return { ...state,\n        loading: false,\n        notes: action.payload\n      };\n\n    case actions.GET_NOTES_FAILURE:\n      return { ...state,\n        loading: false,\n        hasErrors: true\n      };\n\n    case actions.NOTE_CREATED_SUCCESS:\n      return { ...state,\n        loading: false,\n        notes: state.notes.concat(action.payload),\n        hasErrors: false\n      };\n\n    case actions.NOTE_CREATED_FAILURE:\n      return { ...state,\n        loading: false,\n        hasErrors: true\n      };\n\n    case actions.NOTE_DELETED_SUCCESS:\n      return {\n        notes: state.notes.filter(note => note.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/user/development/react/interests/src/reducers/NotesReducer.js"],"names":["actions","initialNotesState","notes","note","loading","hasErrors","notesReducer","state","action","type","GET_NOTES","GET_NOTES_SUCCESS","payload","GET_NOTES_FAILURE","NOTE_CREATED_SUCCESS","concat","NOTE_CREATED_FAILURE","NOTE_DELETED_SUCCESS","filter","id"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AAEA,OAAO,MAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,KAAK,EAAE,EADsB;AAE7BC,EAAAA,IAAI,EAAE,EAFuB;AAG7BC,EAAAA,OAAO,EAAE,KAHoB;AAI7BC,EAAAA,SAAS,EAAE;AAJkB,CAA1B;AAOP,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGN,iBAA9B,EAAiDO,MAAjD,EAAyD;AACpE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,OAAO,CAACU,SAAb;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACJ,SAAKJ,OAAO,CAACW,iBAAb;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BF,QAAAA,KAAK,EAAEM,MAAM,CAACI;AAA1C,OAAP;;AACJ,SAAKZ,OAAO,CAACa,iBAAb;AACI,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,SAAS,EAAE;AAAvC,OAAP;;AACJ,SAAKL,OAAO,CAACc,oBAAb;AACI,aAAO,EAAE,GAAGP,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BF,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYa,MAAZ,CAAmBP,MAAM,CAACI,OAA1B,CAAnC;AAAuEP,QAAAA,SAAS,EAAE;AAAlF,OAAP;;AACJ,SAAKL,OAAO,CAACgB,oBAAb;AACI,aAAO,EAAE,GAAGT,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,SAAS,EAAE;AAAvC,OAAP;;AACJ,SAAKL,OAAO,CAACiB,oBAAb;AACI,aAAO;AAAEf,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYgB,MAAZ,CAAmBf,IAAI,IAAIA,IAAI,CAACgB,EAAL,KAAYX,MAAM,CAACI,OAAP,CAAeO,EAAtD;AAAT,OAAP;;AACJ;AACI,aAAOZ,KAAP;AAdR;AAgBH","sourcesContent":["import * as actions from '../actions/NoteActions'\n\nexport const initialNotesState = {\n    notes: [],\n    note: {},\n    loading: false,\n    hasErrors: false\n}\n\nexport default function notesReducer(state = initialNotesState, action) {\n    switch(action.type) {\n        case actions.GET_NOTES:\n            return { ...state, loading: true }\n        case actions.GET_NOTES_SUCCESS:\n            return { ...state, loading: false, notes: action.payload }\n        case actions.GET_NOTES_FAILURE:\n            return { ...state, loading: false, hasErrors: true }\n        case actions.NOTE_CREATED_SUCCESS:\n            return { ...state, loading: false, notes: state.notes.concat(action.payload), hasErrors: false }\n        case actions.NOTE_CREATED_FAILURE:\n            return { ...state, loading: false, hasErrors: true }\n        case actions.NOTE_DELETED_SUCCESS:\n            return { notes: state.notes.filter(note => note.id !== action.payload.id) }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}