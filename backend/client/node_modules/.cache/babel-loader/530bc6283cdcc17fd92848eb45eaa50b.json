{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/dashboard/EmployeeDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployeeAlerts } from '../../actions/AlertActions';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ShowLoading from '../../util/ShowLoading';\nimport Typoegraphy from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EmployeeDashboard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchEmployeeAlerts());\n  }, []);\n  let alerts = useSelector(state => state.alerts.alerts);\n  let loading = useSelector(state => state.alerts.loading);\n  let hasErrors = useSelector(state => state.alerts.hasErrors);\n\n  const formatDate = date => {\n    let d = new Date(date),\n        month = d.getMonth() + 1,\n        day = d.getDate();\n\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n\n    return [month, day].join('-');\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  if (Object.keys(alerts).length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n        variant: \"h3\",\n        gutterBottom: true,\n        children: \"Your team: At-A-Glance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Overdue alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), \" \", alerts.todays_birthdays.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: alerts.overdue_alerts.map(employee => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: employee.name\n              }, employee.employee_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"There are no overdue alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Today's birthdays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), \" \", alerts.todays_birthdays.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: alerts.todays_birthdays.map(employee => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: employee.name\n              }, employee.employee_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"There are no birthdays today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Upcoming birthdays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), \" \", alerts.upcoming_birthdays.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: alerts.upcoming_birthdays.map(employee => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [employee.name, \" on \", formatDate(employee.birthday)]\n              }, employee.employee_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No upcoming birthdays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Upcoming anniversaries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), \" \", alerts.upcoming_birthdays.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: alerts.upcoming_work_anniversaries.map(employee => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [employee.name, \" on \", formatDate(employee.birthday)]\n              }, employee.employee_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No upcoming birthdays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(EmployeeDashboard, \"gaJ17sCg4J8Vtlv4piSJzRf4Obo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/dashboard/EmployeeDashboard.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchEmployeeAlerts","Grid","Paper","ShowLoading","Typoegraphy","EmployeeDashboard","dispatch","alerts","state","loading","hasErrors","formatDate","date","d","Date","month","getMonth","day","getDate","length","join","Object","keys","padding","todays_birthdays","overdue_alerts","map","employee","name","employee_id","upcoming_birthdays","birthday","upcoming_work_anniversaries"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchEmployeeAlerts } from '../../actions/AlertActions'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport ShowLoading from '../../util/ShowLoading'\nimport Typoegraphy from '@material-ui/core/Typography'\n\nconst EmployeeDashboard = () => {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchEmployeeAlerts())\n    }, [])\n\n    let alerts    = useSelector(state => state.alerts.alerts)\n    let loading   = useSelector(state => state.alerts.loading)\n    let hasErrors = useSelector(state => state.alerts.hasErrors)\n\n    const formatDate = (date) => {\n        let d = new Date(date),\n        month = d.getMonth() + 1,\n        day = d.getDate()\n\n        if (month.length < 2) {\n            month = '0' + month\n        }\n        if (day.length < 2) {\n            day = '0' + day\n        }\n\n        return [month, day].join('-')\n\n    }\n    \n    if (loading) {\n        return(\n            <>\n                <ShowLoading />\n            </>\n        )\n    }\n\n    if (Object.keys(alerts).length) {\n        return(\n            <>\n                <Typoegraphy variant=\"h3\" gutterBottom>Your team: At-A-Glance</Typoegraphy>\n\n                <Grid container spacing={3} xs={12}>\n                    <Grid item xs={3}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <Typoegraphy variant=\"h5\" gutterBottom>Overdue alerts</Typoegraphy> { alerts.todays_birthdays.length ?\n                                <div>\n                                    {alerts.overdue_alerts.map((employee) => (\n                                        <span key={employee.employee_id}>{employee.name}</span>\n                                    ))}\n                                </div>\n                                    :\n                                <div>\n                                    There are no overdue alerts\n                                </div>\n                                    }\n                        </Paper>\n                    </Grid>\n                \n                    <Grid item xs={3}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <Typoegraphy variant=\"h5\" gutterBottom>Today's birthdays</Typoegraphy> { alerts.todays_birthdays.length ?\n                                <div>\n                                    {alerts.todays_birthdays.map((employee) => (\n                                        <span key={employee.employee_id}>{employee.name}</span>\n                                    ))}\n                                </div>\n                            :\n                                <div>\n                                    There are no birthdays today\n                                </div>\n                            }\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={3}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                        <Typoegraphy variant=\"h5\" gutterBottom>Upcoming birthdays</Typoegraphy> { alerts.upcoming_birthdays.length ? \n                                <div>\n                                    {alerts.upcoming_birthdays.map((employee) => (\n                                        <span key={employee.employee_id}>{employee.name} on {formatDate(employee.birthday)}</span>\n                                    ))}\n                                </div>\n                            :\n                                <div>\n                                    No upcoming birthdays\n                                </div>\n                            }\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={3}>\n                        <Paper elevation={3} style={{ padding: 10 }}>\n                        <Typoegraphy variant=\"h5\" gutterBottom>Upcoming anniversaries</Typoegraphy> { alerts.upcoming_birthdays.length ? \n                                <div>\n                                    {alerts.upcoming_work_anniversaries.map((employee) => (\n                                        <span key={employee.employee_id}>{employee.name} on {formatDate(employee.birthday)}</span>\n                                    ))}\n                                </div>\n                            :\n                                <div>\n                                    No upcoming birthdays\n                                </div>\n                            }\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    } else {\n        return(\n            <>\n                <ShowLoading />\n            </>\n        )\n    }\n}\n\nexport default EmployeeDashboard\n"]},"metadata":{},"sourceType":"module"}