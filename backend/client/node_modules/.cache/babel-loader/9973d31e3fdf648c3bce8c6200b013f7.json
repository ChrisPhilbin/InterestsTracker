{"ast":null,"code":"export const GET_INTERACTIONS = \"GET_INTERACTIONS\";\nexport const GET_INTERACTIONS_SUCCESS = \"GET_INTERACTIONS_SUCCESS\";\nexport const GET_INTERACTIONS_FAILURE = \"GET_INTERACTIONS_FAILURE\";\nexport const INTERACTION_CREATED_SUCCESS = \"INTERACTION_CREATED_SUCCESS\";\nexport const INTERACTION_CREATED_FAILURE = \"INTERACTION_CREATED_FAILURE\";\nexport const getInteractions = () => ({\n  type: GET_INTERACTIONS\n});\nexport const getInteractionsSucess = interaction => ({\n  type: GET_INTERACTIONS_SUCCESS,\n  payload: interaction\n});\nexport const getInteractionsFailure = error => ({\n  type: GET_INTERACTIONS_FAILURE,\n  payload: error\n});\nexport const fetchEmployeeInteractions = employee_id => {\n  return async dispatch => {\n    try {\n      console.log(employee_id, \"employee_id from actions\");\n      const response = await fetch(`http://localhost:3001/employees/${employee_id}/interactions`);\n      const interactions = await response.json();\n      dispatch(getInteractionsSucess(interactions));\n    } catch (error) {\n      dispatch(getInteractionsFailure(error));\n    }\n  };\n};\nexport const interactionCreatedSuccess = interaction => ({\n  type: INTERACTION_CREATED_SUCCESS,\n  payload: interaction\n});\nexport const interactionCreatedFailure = error => ({\n  type: INTERACTION_CREATED_FAILURE,\n  payload: error\n});\nexport const fetchPostNewInteraction = interaction => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`http://localhost:3001/employees/${interaction.employee_id}/interactions`, {\n        method: 'POST',\n        body: JSON.stringify(interaction),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const newInteraction = await response.json();\n      dispatch(interactionCreatedSuccess(newInteraction));\n    } catch (error) {\n      dispatch(interactionCreatedFailure(error));\n    }\n  };\n};","map":{"version":3,"sources":["/home/user/development/react/interests/src/actions/InteractionActions.js"],"names":["GET_INTERACTIONS","GET_INTERACTIONS_SUCCESS","GET_INTERACTIONS_FAILURE","INTERACTION_CREATED_SUCCESS","INTERACTION_CREATED_FAILURE","getInteractions","type","getInteractionsSucess","interaction","payload","getInteractionsFailure","error","fetchEmployeeInteractions","employee_id","dispatch","console","log","response","fetch","interactions","json","interactionCreatedSuccess","interactionCreatedFailure","fetchPostNewInteraction","method","body","JSON","stringify","headers","newInteraction"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAW,kBAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AAEP,OAAO,MAAMC,eAAe,GAAG,OAC3B;AAAEC,EAAAA,IAAI,EAAEN;AAAR,CAD2B,CAAxB;AAIP,OAAO,MAAMO,qBAAqB,GAAIC,WAAD,KACjC;AAAEF,EAAAA,IAAI,EAAEL,wBAAR;AAAkCQ,EAAAA,OAAO,EAAED;AAA3C,CADiC,CAA9B;AAIP,OAAO,MAAME,sBAAsB,GAAIC,KAAD,KAClC;AAAEL,EAAAA,IAAI,EAAEJ,wBAAR;AAAkCO,EAAAA,OAAO,EAAEE;AAA3C,CADkC,CAA/B;AAIP,OAAO,MAAMC,yBAAyB,GAAIC,WAAD,IAAiB;AACtD,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyB,0BAAzB;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCL,WAAY,eAAhD,CAA5B;AACA,YAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAN,MAAAA,QAAQ,CAACP,qBAAqB,CAACY,YAAD,CAAtB,CAAR;AACH,KALD,CAKE,OAAOR,KAAP,EAAc;AACZG,MAAAA,QAAQ,CAACJ,sBAAsB,CAACC,KAAD,CAAvB,CAAR;AACH;AACJ,GATD;AAUH,CAXM;AAaP,OAAO,MAAMU,yBAAyB,GAAIb,WAAD,KACrC;AAAEF,EAAAA,IAAI,EAAEH,2BAAR;AAAqCM,EAAAA,OAAO,EAAED;AAA9C,CADqC,CAAlC;AAIP,OAAO,MAAMc,yBAAyB,GAAIX,KAAD,KACrC;AAAEL,EAAAA,IAAI,EAAEF,2BAAR;AAAqCK,EAAAA,OAAO,EAAEE;AAA9C,CADqC,CAAlC;AAIP,OAAO,MAAMY,uBAAuB,GAAIf,WAAD,IAAiB;AACpD,SAAO,MAAOM,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCV,WAAW,CAACK,WAAY,eAA5D,EAA4E;AACpGW,QAAAA,MAAM,EAAE,MAD4F;AAEpGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,WAAf,CAF8F;AAGpGoB,QAAAA,OAAO,EAAE;AAAE,0BAAe;AAAjB;AAH2F,OAA5E,CAA5B;AAKA,YAAMC,cAAc,GAAG,MAAMZ,QAAQ,CAACG,IAAT,EAA7B;AACAN,MAAAA,QAAQ,CAACO,yBAAyB,CAACQ,cAAD,CAA1B,CAAR;AACH,KARD,CAQE,OAAOlB,KAAP,EAAc;AACZG,MAAAA,QAAQ,CAACQ,yBAAyB,CAACX,KAAD,CAA1B,CAAR;AACH;AACJ,GAZD;AAaH,CAdM","sourcesContent":["export const GET_INTERACTIONS         = \"GET_INTERACTIONS\"\nexport const GET_INTERACTIONS_SUCCESS = \"GET_INTERACTIONS_SUCCESS\"\nexport const GET_INTERACTIONS_FAILURE = \"GET_INTERACTIONS_FAILURE\"\n\nexport const INTERACTION_CREATED_SUCCESS = \"INTERACTION_CREATED_SUCCESS\"\nexport const INTERACTION_CREATED_FAILURE = \"INTERACTION_CREATED_FAILURE\"\n\nexport const getInteractions = () => (\n    { type: GET_INTERACTIONS }\n)\n\nexport const getInteractionsSucess = (interaction) => (\n    { type: GET_INTERACTIONS_SUCCESS, payload: interaction}\n)\n\nexport const getInteractionsFailure = (error) => (\n    { type: GET_INTERACTIONS_FAILURE, payload: error }\n)\n\nexport const fetchEmployeeInteractions = (employee_id) => {\n    return async (dispatch) => {\n        try {\n            console.log(employee_id, \"employee_id from actions\")\n            const response = await fetch(`http://localhost:3001/employees/${employee_id}/interactions`)\n            const interactions = await response.json()\n            dispatch(getInteractionsSucess(interactions))\n        } catch (error) {\n            dispatch(getInteractionsFailure(error))\n        }\n    }\n}\n\nexport const interactionCreatedSuccess = (interaction) => (\n    { type: INTERACTION_CREATED_SUCCESS, payload: interaction }\n)\n\nexport const interactionCreatedFailure = (error) => (\n    { type: INTERACTION_CREATED_FAILURE, payload: error }\n)\n\nexport const fetchPostNewInteraction = (interaction) => {\n    return async (dispatch) => {\n        try {\n            const response = await fetch(`http://localhost:3001/employees/${interaction.employee_id}/interactions`, {\n                method: 'POST',\n                body: JSON.stringify(interaction),\n                headers: { 'Content-Type':'application/json'}\n            })\n            const newInteraction = await response.json()\n            dispatch(interactionCreatedSuccess(newInteraction))\n        } catch (error) {\n            dispatch(interactionCreatedFailure(error))\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}