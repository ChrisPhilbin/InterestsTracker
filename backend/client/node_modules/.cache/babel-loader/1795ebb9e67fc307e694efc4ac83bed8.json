{"ast":null,"code":"export const GET_INTERACTIONS = \"GET_INTERACTIONS\";\nexport const GET_INTERACTIONS_SUCCESS = \"GET_INTERACTIONS_SUCCESS\";\nexport const GET_INTERACTIONS_FAILURE = \"GET_INTERACTIONS_FAILURE\";\nexport const INTERACTION_CREATED_SUCCESS = \"INTERACTION_CREATED_SUCCESS\";\nexport const INTERACTION_CREATED_FAILURE = \"INTERACTION_CREATED_FAILURE\";\nexport const INTERACTION_DELETED_SUCCESS = \"INTERACTION_DELETED_SUCCESS\";\nexport const INTERACTION_DELETED_FAILURE = \"INTERACTION_DELETED_FAILURE\";\nexport const getInteractions = () => ({\n  type: GET_INTERACTIONS\n});\nexport const getInteractionsSucess = interactions => ({\n  type: GET_INTERACTIONS_SUCCESS,\n  payload: interactions\n});\nexport const getInteractionsFailure = error => ({\n  type: GET_INTERACTIONS_FAILURE,\n  payload: error\n});\nexport const fetchEmployeeInteractions = employee_id => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`http://localhost:3001/employees/${employee_id}/interactions`);\n      const interactions = await response.json();\n      dispatch(getInteractionsSucess(interactions));\n    } catch (error) {\n      dispatch(getInteractionsFailure(error));\n    }\n  };\n};\nexport const interactionCreatedSuccess = interaction => ({\n  type: INTERACTION_CREATED_SUCCESS,\n  payload: interaction\n});\nexport const interactionCreatedFailure = error => ({\n  type: INTERACTION_CREATED_FAILURE,\n  payload: error\n});\nexport const fetchPostNewInteraction = interaction => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`http://localhost:3001/employees/${interaction.employee_id}/interactions`, {\n        method: 'POST',\n        body: JSON.stringify(interaction),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const newInteraction = await response.json();\n      dispatch(interactionCreatedSuccess(newInteraction));\n    } catch (error) {\n      dispatch(interactionCreatedFailure(error));\n    }\n  };\n};\nexport const delectInteractionSuccess = interaction => ({\n  type: INTERACTION_DELETED_SUCCESS,\n  payload: interaction\n});\nexport const deleteInteractionFailure = error => ({\n  type: INTERACTION_DELETED_FAILURE,\n  payload: error\n});\nexport const fetchDeleteInteraction = (employee_id, interaction_id) => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`http://localhost:3001/employees/${employee_id}/interactions/${interaction_id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      dispatch(deleteInteractionSuccess(data));\n    } catch (error) {\n      dispatch(deleteInteractionFailure(error));\n    }\n  };\n};","map":{"version":3,"sources":["/home/user/development/react/interests/src/actions/InteractionActions.js"],"names":["GET_INTERACTIONS","GET_INTERACTIONS_SUCCESS","GET_INTERACTIONS_FAILURE","INTERACTION_CREATED_SUCCESS","INTERACTION_CREATED_FAILURE","INTERACTION_DELETED_SUCCESS","INTERACTION_DELETED_FAILURE","getInteractions","type","getInteractionsSucess","interactions","payload","getInteractionsFailure","error","fetchEmployeeInteractions","employee_id","dispatch","response","fetch","json","interactionCreatedSuccess","interaction","interactionCreatedFailure","fetchPostNewInteraction","method","body","JSON","stringify","headers","newInteraction","delectInteractionSuccess","deleteInteractionFailure","fetchDeleteInteraction","interaction_id","data","deleteInteractionSuccess"],"mappings":"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","sourcesContent":["export const GET_INTERACTIONS         = \"GET_INTERACTIONS\"\nexport const GET_INTERACTIONS_SUCCESS = \"GET_INTERACTIONS_SUCCESS\"\nexport const GET_INTERACTIONS_FAILURE = \"GET_INTERACTIONS_FAILURE\"\n\nexport const INTERACTION_CREATED_SUCCESS = \"INTERACTION_CREATED_SUCCESS\"\nexport const INTERACTION_CREATED_FAILURE = \"INTERACTION_CREATED_FAILURE\"\n\nexport const INTERACTION_DELETED_SUCCESS = \"INTERACTION_DELETED_SUCCESS\"\nexport const INTERACTION_DELETED_FAILURE = \"INTERACTION_DELETED_FAILURE\"\n\nexport const getInteractions = () => (\n    { type: GET_INTERACTIONS }\n)\n\nexport const getInteractionsSucess = (interactions) => (\n    { type: GET_INTERACTIONS_SUCCESS, payload: interactions }\n)\n\nexport const getInteractionsFailure = (error) => (\n    { type: GET_INTERACTIONS_FAILURE, payload: error }\n)\n\nexport const fetchEmployeeInteractions = (employee_id) => {\n    return async (dispatch) => {\n        try {\n            const response = await fetch(`http://localhost:3001/employees/${employee_id}/interactions`)\n            const interactions = await response.json()\n            dispatch(getInteractionsSucess(interactions))\n        } catch (error) {\n            dispatch(getInteractionsFailure(error))\n        }\n    }\n}\n\nexport const interactionCreatedSuccess = (interaction) => (\n    { type: INTERACTION_CREATED_SUCCESS, payload: interaction }\n)\n\nexport const interactionCreatedFailure = (error) => (\n    { type: INTERACTION_CREATED_FAILURE, payload: error }\n)\n\nexport const fetchPostNewInteraction = (interaction) => {\n    return async (dispatch) => {\n        try {\n            const response = await fetch(`http://localhost:3001/employees/${interaction.employee_id}/interactions`, {\n                method: 'POST',\n                body: JSON.stringify(interaction),\n                headers: { 'Content-Type':'application/json'}\n            })\n            const newInteraction = await response.json()\n            dispatch(interactionCreatedSuccess(newInteraction))\n        } catch (error) {\n            dispatch(interactionCreatedFailure(error))\n        }\n    }\n}\n\nexport const delectInteractionSuccess = (interaction) => (\n    { type: INTERACTION_DELETED_SUCCESS, payload: interaction }\n)\n\nexport const deleteInteractionFailure = (error) => (\n    { type: INTERACTION_DELETED_FAILURE, payload: error }\n)\n\nexport const fetchDeleteInteraction = (employee_id, interaction_id) => {\n    return async (dispatch) => {\n        try {\n            const response = await fetch(`http://localhost:3001/employees/${employee_id}/interactions/${interaction_id}`, {\n                method: 'DELETE',\n                headers: { 'Content-Type':'application/json' }\n            })\n            const data = await response.json()\n            dispatch(deleteInteractionSuccess(data))\n        } catch (error) {\n            dispatch(deleteInteractionFailure(error))\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}