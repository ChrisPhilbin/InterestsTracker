{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/employees/EmployeeCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport useCheckDate from '../../hooks/useCheckDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  checkDate: {\n    float: 'right',\n    top: '10px',\n    right: '15px'\n  },\n  root: {\n    minWidth: 470\n  }\n}));\n\nconst EmployeeCard = props => {\n  _s();\n\n  const classes = useStyles();\n  dayjs.extend(relativeTime);\n  let employee = props.employee;\n  let lastInteraction = dayjs(props.employee.last_interaction).fromNow();\n  let currentDate = new Date();\n  let previousDate = new Date(props.employee.last_interaction);\n  let isRecent = useCheckDate(props.employee.last_interaction);\n  console.log(isRecent, \"should be T or F\");\n  let minutesSinceLastInteraction = Math.round((currentDate - previousDate) / 1000 / 60);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.checkDate,\n        children: useCheckDate(props.employee.last_interaction) ? /*#__PURE__*/_jsxDEV(WarningIcon, {\n          style: {\n            color: 'red',\n            fontSize: 45\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 71\n        }, this) : /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n          style: {\n            color: 'green',\n            fontSize: 45\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 125\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: employee.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        children: [\"Last interaction: \", lastInteraction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/employees/${employee.id}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          children: \"View/Edit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeCard, \"BOqWyFIq/GHx+af69/+VmMgKr+4=\", false, function () {\n  return [useStyles, useCheckDate, useCheckDate];\n});\n\n_c = EmployeeCard;\nexport default EmployeeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeCard\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/employees/EmployeeCard.js"],"names":["React","Button","Card","CardActions","CardContent","CheckCircleOutlineIcon","dayjs","Link","makeStyles","Typography","relativeTime","WarningIcon","useCheckDate","useStyles","theme","checkDate","float","top","right","root","minWidth","EmployeeCard","props","classes","extend","employee","lastInteraction","last_interaction","fromNow","currentDate","Date","previousDate","isRecent","console","log","minutesSinceLastInteraction","Math","round","color","fontSize","name","id","textDecoration"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport dayjs from 'dayjs'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport WarningIcon from '@material-ui/icons/Warning';\nimport useCheckDate from '../../hooks/useCheckDate'\n\nconst useStyles = makeStyles((theme) => ({\n    checkDate: {\n        float: 'right',\n        top: '10px',\n        right: '15px',\n    },\n    root: {\n        minWidth: 470,\n    }\n}))\n\n\nconst EmployeeCard = (props) => {\n\n    const classes = useStyles()\n\n    dayjs.extend(relativeTime)\n\n    let employee = props.employee\n    let lastInteraction = dayjs(props.employee.last_interaction).fromNow()\n\n    let currentDate = new Date()\n    let previousDate = new Date(props.employee.last_interaction)\n\n    let isRecent = useCheckDate(props.employee.last_interaction)\n    console.log(isRecent, \"should be T or F\")\n\n    let minutesSinceLastInteraction = Math.round((((currentDate - previousDate)/1000)/60))\n\n    return(\n        <Card variant=\"outlined\">\n            <CardContent>\n                <span className={classes.checkDate}>\n                    { useCheckDate(props.employee.last_interaction) ? <WarningIcon style={{color: 'red', fontSize: 45}}/> : <CheckCircleOutlineIcon  style={{color: 'green', fontSize: 45}}/>}\n                </span>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {employee.name}\n                </Typography>\n                <Typography color=\"textSecondary\">\n                    Last interaction: {lastInteraction}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Link to={`/employees/${employee.id}`} style={{ textDecoration: 'none'}}><Button size=\"small\" color=\"primary\">View/Edit Details</Button></Link>\n                <Button size=\"small\" color=\"primary\">Delete</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default EmployeeCard"]},"metadata":{},"sourceType":"module"}