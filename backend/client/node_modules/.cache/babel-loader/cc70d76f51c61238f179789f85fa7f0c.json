{"ast":null,"code":"export const GET_EMPLOYEES = \"GET_EMPLOYEES\";\nexport const GET_EMPLOYEES_SUCCESS = \"GET_EMPLOYEES_SUCCESS\";\nexport const GET_EMPLOYEES_FAILURE = \"GET_EMPLOYEES_FAILURE\";\nexport const GET_ONE_EMPLOYEE = \"GET_ONE_EMPLOYEE\";\nexport const GET_ONE_EMPLOYEE_SUCCESS = \"GET_ONE_EMPLOYEE_SUCCESS\";\nexport const GET_ONE_EMPLOYEE_FAILURE = \"GET_ONE_EMPLOYEE_FAILURE\";\nexport const EMPLOYEE_CREATED_SUCCESS = \"EMPLOYEE_CREATED_SUCCESS\";\nexport const EMPLOYEE_CREATED_FAILURE = \"EMPLOYEE_CREATED_FAILURE\";\nexport const EMPLOYEE_DELETED_SUCCESS = \"EMPLOYEE_DELETED_SUCCESS\";\nexport const EMPLOYEE_DELETED_FAILURE = \"EMPLOYEE_DELETED_FAILURE\";\nexport const UPDATE_EMPLOYEE_SUCCESS = \"UPDATE_EMPLOYEE_SUCCESS\";\nexport const UPDATE_EMPLOYEE_FAILURE = \"UPDATE_EMPLOYEE_FAILURE\";\nexport const getEmployees = () => ({\n  type: GET_EMPLOYEES\n});\nexport const getEmployeesSuccess = employees => ({\n  type: GET_EMPLOYEES_SUCCESS,\n  payload: employees\n});\nexport const getEmployeesFailure = error => ({\n  type: GET_EMPLOYEES_FAILURE,\n  payload: error\n});\nexport const fetchAllEmployees = () => {\n  return async dispatch => {\n    try {\n      const response = await fetch('http://localhost:3001/employees');\n      const employees = await response.json();\n      dispatch(getEmployeesSuccess(employees));\n    } catch (error) {\n      dispatch(getEmployeesFailure(error));\n    }\n  };\n};\nexport const getOneEmployee = () => ({\n  type: GET_ONE_EMPLOYEE\n});\nexport const getOneEmployeeSuccess = employee => ({\n  type: GET_ONE_EMPLOYEE_SUCCESS,\n  payload: employee\n});\nexport const getOneEmployeeFailure = error => ({\n  type: GET_ONE_EMPLOYEE_FAILURE,\n  payload: error\n});\nexport const fetchOneEmployee = employee_id => {\n  return async dispatch => {\n    try {\n      const success = await fetch(`http://localhost:3001/employees/${employee_id}`);\n      const employee = await success.json();\n      dispatch(getOneEmployeeSuccess(employee));\n    } catch (error) {\n      dispatch(getOneEmployeeFailure(error));\n    }\n  };\n};\nexport const employeeCreatedSuccess = employee => ({\n  type: EMPLOYEE_CREATED_SUCCESS,\n  payload: employee\n});\nexport const employeeCreatedFailure = error => ({\n  type: EMPLOYEE_CREATED_FAILURE,\n  payload: error\n});\nexport const fetchPostNewEmployee = new_employee => {\n  return async dispatch => {\n    try {\n      const success = await fetch('http://localhost:3001/employees', {\n        method: 'POST',\n        body: JSON.stringify(new_employee),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const employee = await success.json();\n      dispatch(employeeCreatedSuccess(employee));\n    } catch (error) {\n      dispatch(employeeCreatedFailure(error));\n    }\n  };\n};\nexport const employeeDeletedSuccess = employee => ({\n  type: EMPLOYEE_DELETED_SUCCESS,\n  payload: employee\n});\nexport const employeeDeletedFailure = error => ({\n  type: EMPLOYEE_DELETED_FAILURE,\n  payload: error\n});\nexport const deleteOneEmployee = employee_id => {\n  return async dispatch => {\n    try {\n      const success = await fetch(`http://localhost:3001/employees/${employee_id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const employee = await success.json();\n      dispatch(employeeDeletedSuccess(employee));\n    } catch (error) {\n      dispatch(employeeDeletedFailure(error));\n    }\n  };\n};\nexport const updateEmployeeSuccess = employee => ({\n  type: UPDATE_EMPLOYEE_SUCCESS,\n  payload: employee\n});\nexport const updateEmployeeFailure = error => ({\n  type: UPDATE_EMPLOYEE_FAILURE,\n  payload: error\n});\nexport const updateEmployeeLastInteraction = employee_id => {\n  return async dispatch => {\n    try {\n      const success = fetch(`http://localhost:3001/employees/${employee_id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"last_interaction\": new Date()\n        })\n      });\n      const employee = await success.json();\n    } catch (error) {}\n  };\n};","map":{"version":3,"sources":["/home/user/development/react/interests/src/actions/EmployeeActions.js"],"names":["GET_EMPLOYEES","GET_EMPLOYEES_SUCCESS","GET_EMPLOYEES_FAILURE","GET_ONE_EMPLOYEE","GET_ONE_EMPLOYEE_SUCCESS","GET_ONE_EMPLOYEE_FAILURE","EMPLOYEE_CREATED_SUCCESS","EMPLOYEE_CREATED_FAILURE","EMPLOYEE_DELETED_SUCCESS","EMPLOYEE_DELETED_FAILURE","UPDATE_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_FAILURE","getEmployees","type","getEmployeesSuccess","employees","payload","getEmployeesFailure","error","fetchAllEmployees","dispatch","response","fetch","json","getOneEmployee","getOneEmployeeSuccess","employee","getOneEmployeeFailure","fetchOneEmployee","employee_id","success","employeeCreatedSuccess","employeeCreatedFailure","fetchPostNewEmployee","new_employee","method","body","JSON","stringify","headers","employeeDeletedSuccess","employeeDeletedFailure","deleteOneEmployee","updateEmployeeSuccess","updateEmployeeFailure","updateEmployeeLastInteraction","Date"],"mappings":"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","sourcesContent":["export const GET_EMPLOYEES            = \"GET_EMPLOYEES\"\nexport const GET_EMPLOYEES_SUCCESS    = \"GET_EMPLOYEES_SUCCESS\"\nexport const GET_EMPLOYEES_FAILURE    = \"GET_EMPLOYEES_FAILURE\"\n\nexport const GET_ONE_EMPLOYEE         = \"GET_ONE_EMPLOYEE\"\nexport const GET_ONE_EMPLOYEE_SUCCESS = \"GET_ONE_EMPLOYEE_SUCCESS\"\nexport const GET_ONE_EMPLOYEE_FAILURE = \"GET_ONE_EMPLOYEE_FAILURE\"\n\nexport const EMPLOYEE_CREATED_SUCCESS = \"EMPLOYEE_CREATED_SUCCESS\"\nexport const EMPLOYEE_CREATED_FAILURE = \"EMPLOYEE_CREATED_FAILURE\"\n\nexport const EMPLOYEE_DELETED_SUCCESS = \"EMPLOYEE_DELETED_SUCCESS\"\nexport const EMPLOYEE_DELETED_FAILURE = \"EMPLOYEE_DELETED_FAILURE\"\n\nexport const UPDATE_EMPLOYEE_SUCCESS = \"UPDATE_EMPLOYEE_SUCCESS\"\nexport const UPDATE_EMPLOYEE_FAILURE = \"UPDATE_EMPLOYEE_FAILURE\"\n\nexport const getEmployees = () => (\n    { type: GET_EMPLOYEES }\n)\n\nexport const getEmployeesSuccess = (employees) => (\n    { type: GET_EMPLOYEES_SUCCESS, payload: employees }\n)\n\nexport const getEmployeesFailure = (error) => (\n    { type: GET_EMPLOYEES_FAILURE, payload: error }\n)\n\nexport const fetchAllEmployees = () => {\n    return async (dispatch) => {\n        try {\n            const response = await fetch('http://localhost:3001/employees')\n            const employees = await response.json()\n            dispatch(getEmployeesSuccess(employees))\n        } catch (error) {\n            dispatch(getEmployeesFailure(error))\n        }\n    }\n}\n\nexport const getOneEmployee = () => (\n    { type: GET_ONE_EMPLOYEE }\n)\n\nexport const getOneEmployeeSuccess = (employee) => (\n    { type: GET_ONE_EMPLOYEE_SUCCESS, payload: employee }\n)\n\nexport const getOneEmployeeFailure = (error) => (\n    { type: GET_ONE_EMPLOYEE_FAILURE, payload: error }\n)\n\nexport const fetchOneEmployee = (employee_id) => {\n    return async (dispatch) => {\n        try {\n            const success = await fetch(`http://localhost:3001/employees/${employee_id}`)\n            const employee = await success.json()\n            dispatch(getOneEmployeeSuccess(employee))\n        } catch (error) {\n            dispatch(getOneEmployeeFailure(error))\n        }\n    }\n}\n\nexport const employeeCreatedSuccess = (employee) => (\n    { type: EMPLOYEE_CREATED_SUCCESS, payload: employee }\n)\n\nexport const employeeCreatedFailure = (error) => (\n    { type: EMPLOYEE_CREATED_FAILURE, payload: error }\n)\n\nexport const fetchPostNewEmployee = (new_employee) => {\n    return async (dispatch) => {\n        try {\n            const success = await fetch('http://localhost:3001/employees', {\n                method: 'POST',\n                body: JSON.stringify(new_employee),\n                headers: { 'Content-Type': 'application/json' }\n            })\n            const employee = await success.json()\n            dispatch(employeeCreatedSuccess(employee))\n        } catch (error) {\n            dispatch(employeeCreatedFailure(error))\n        }\n    }\n}\n\nexport const employeeDeletedSuccess = (employee) => (\n    { type: EMPLOYEE_DELETED_SUCCESS, payload: employee }\n)\n\nexport const employeeDeletedFailure = (error) => (\n    { type: EMPLOYEE_DELETED_FAILURE, payload: error }\n)\n\nexport const deleteOneEmployee = (employee_id) => {\n    return async (dispatch) => {\n        try {\n            const success = await fetch(`http://localhost:3001/employees/${employee_id}`, {\n                method: \"DELETE\",\n                headers: { 'Content-Type': 'application/json' }\n            })\n            const employee = await success.json()\n            dispatch(employeeDeletedSuccess(employee))\n        } catch (error) {\n            dispatch(employeeDeletedFailure(error))\n        }\n    }\n}\n\nexport const updateEmployeeSuccess = (employee) => (\n    { type: UPDATE_EMPLOYEE_SUCCESS, payload: employee }\n)\n\nexport const updateEmployeeFailure = (error) => (\n    { type: UPDATE_EMPLOYEE_FAILURE, payload: error }\n)\n\nexport const updateEmployeeLastInteraction = (employee_id) => {\n    return async (dispatch) => {\n        try {\n            const success = fetch(`http://localhost:3001/employees/${employee_id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\"last_interaction\": new Date()})\n            })\n            const employee = await success.json()\n        } catch (error) {\n\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}