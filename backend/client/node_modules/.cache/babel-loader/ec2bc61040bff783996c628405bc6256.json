{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/employees/CreateEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport { useDispatch } from 'react-redux';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Input from '@material-ui/core/Input';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { fetchPostNewEmployee } from '../../actions/EmployeeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateEmployee = props => {\n  _s();\n\n  let [name, setName] = useState('');\n  let [headshot, setHeadshot] = useState(null);\n  let [selectedDate, setSelectedDate] = React.useState(new Date());\n  const dispatch = useDispatch();\n\n  const handleCreateNewEmployee = () => {\n    let employee = {\n      name: name,\n      headshot: headshot,\n      hire_date: selectedDate,\n      last_interaction: new Date()\n    };\n    let formData = new FormData(employee);\n    console.log(formData, \"formData\");\n    dispatch(fetchPostNewEmployee(employee));\n    props.history.push('/employees');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      padding: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Add a new employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"fullname\",\n        label: \"Full name\",\n        defaultValue: \"Michael Smith\",\n        variant: \"outlined\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        accept: \"*\",\n        id: \"upload-button\",\n        style: {\n          display: 'none'\n        },\n        onChange: e => setHeadshot(e.target.files[0]),\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          style: {\n            marginTop: 20\n          },\n          children: \"Upload headshot photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"MM/dd/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Hire date\",\n          value: selectedDate,\n          onChange: date => setSelectedDate(date),\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: 15\n        },\n        onClick: () => handleCreateNewEmployee(),\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateEmployee, \"FwNkMCE9s5VUxN+3stal+PTdOxM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateEmployee;\nexport default CreateEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEmployee\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/employees/CreateEmployee.js"],"names":["React","useEffect","useState","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useDispatch","Container","Paper","Input","Grid","TextField","Button","Typography","fetchPostNewEmployee","CreateEmployee","props","name","setName","headshot","setHeadshot","selectedDate","setSelectedDate","Date","dispatch","handleCreateNewEmployee","employee","hire_date","last_interaction","formData","FormData","console","log","history","push","padding","e","target","value","display","files","marginTop","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\nimport { useDispatch } from 'react-redux'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Input from '@material-ui/core/Input'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { fetchPostNewEmployee } from '../../actions/EmployeeActions'\n\nconst CreateEmployee = (props) => {\n\n    let [name, setName]                 = useState('')\n    let [headshot, setHeadshot]         = useState(null)\n    let [selectedDate, setSelectedDate] = React.useState(new Date());\n\n    const dispatch = useDispatch()\n\n    const handleCreateNewEmployee = () => {\n        let employee = {\n            name: name,\n            headshot: headshot,\n            hire_date: selectedDate,\n            last_interaction: new Date()\n        }\n        let formData = new FormData(employee)\n        console.log(formData, \"formData\")\n        dispatch(fetchPostNewEmployee(employee))\n        props.history.push('/employees')\n    }\n\n    return(\n        <Grid style={{ padding: 40 }}>\n            <Typography variant=\"h4\" gutterBottom>Add a new employee</Typography>\n\n            <Grid item>\n                <TextField\n                    required\n                    id=\"fullname\"\n                    label=\"Full name\"\n                    defaultValue=\"Michael Smith\"\n                    variant=\"outlined\"\n                    onChange={(e) => setName(e.target.value)}\n                />\n            </Grid>\n\n            <Grid item>\n                <Input accept=\"*\" id=\"upload-button\" style={{display: 'none'}} onChange={(e) => setHeadshot(e.target.files[0])} type=\"file\" />\n\n                <label htmlFor=\"upload-button\">\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" style={{ marginTop: 20 }}>Upload headshot photo</Button>\n                </label>\n            </Grid>\n\n            <Grid item>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Hire date\"\n                        value={selectedDate}\n                        onChange={date => setSelectedDate(date)}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n            </Grid>\n\n            <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{ marginTop: 15 }} onClick={() => handleCreateNewEmployee()}>Create</Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default CreateEmployee\n"]},"metadata":{},"sourceType":"module"}