{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/interests/DisplayAllEmployeeInterests.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployeeInterests } from '../../actions/InterestActions';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typoegraphy from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShowLoading from '../../util/ShowLoading';\nimport ShowErrors from '../../util/ShowErrors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  addItemIcon: {\n    float: 'right',\n    bottom: '0px',\n    left: 0\n  },\n  widget: {\n    padding: 15\n  }\n}));\n\nconst DisplayAllEmployeeInterests = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const employee_id = props.employee_id;\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  useEffect(() => {\n    dispatch(fetchEmployeeInterests(employee_id));\n  }, [dispatch]);\n  let [open, setOpen] = useState(false);\n  let [interest, setInterest] = useState('');\n  let interests = useSelector(state => state.interests.interests);\n  let loading = useSelector(state => state.interests.loading);\n  let hasErrors = useSelector(state => state.interests.hasErrors);\n  const Transition = /*#__PURE__*/React.forwardRef(function Transition(props, ref) {\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"up\",\n      ref: ref,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  } else if (hasErrors) {\n    return /*#__PURE__*/_jsxDEV(ShowErrors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  } else if (interests) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: () => setOpen(false),\n        TransitionComponent: Transition,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"responsive-dialog-title\",\n          children: \"Create a new exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: [\"Add a new interest or hobby below\", /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.form,\n              noValidate: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    autoFocus: true,\n                    variant: \"outlined\",\n                    required: true,\n                    id: \"InterestName\",\n                    label: \"Interest or Hobby name\",\n                    name: \"name\",\n                    side: \"medium\",\n                    autoComplete: \"interestName\",\n                    value: interest,\n                    onChange: e => setInterest(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            onClick: handleSubmit,\n            color: \"primary\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            onClick: () => setOpen(false),\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.addItemIcon,\n        color: \"primary\",\n        \"aria-label\": \"Add new interest\",\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          style: {\n            fontSize: 30\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.widget,\n        children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n          variant: \"h5\",\n          style: {\n            textAlign: 'center'\n          },\n          gutterBottom: true,\n          children: \"Interests/Hobbies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: \"true\",\n          children: interests.map(interest => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: interest.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)\n          }, interest.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DisplayAllEmployeeInterests, \"wKzWpu11NaoyEizza5eSY4zrFAU=\", false, function () {\n  return [useDispatch, useStyles, useMediaQuery, useSelector, useSelector, useSelector];\n});\n\n_c = DisplayAllEmployeeInterests;\nexport default DisplayAllEmployeeInterests;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllEmployeeInterests\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/interests/DisplayAllEmployeeInterests.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchEmployeeInterests","List","ListItem","ListItemText","Paper","IconButton","AddCircleIcon","Typoegraphy","makeStyles","ShowLoading","ShowErrors","useMediaQuery","Dialog","DialogActions","DialogContent","DialogContentText","Slide","useStyles","theme","addItemIcon","float","bottom","left","widget","padding","DisplayAllEmployeeInterests","props","dispatch","classes","employee_id","fullScreen","breakpoints","down","open","setOpen","interest","setInterest","interests","state","loading","hasErrors","Transition","forwardRef","ref","form","e","target","value","handleSubmit","fontSize","textAlign","map","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchEmployeeInterests } from '../../actions/InterestActions'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport Typoegraphy from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ShowLoading from '../../util/ShowLoading'\nimport ShowErrors from '../../util/ShowErrors'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport Slide from '@material-ui/core/Slide'\n\nconst useStyles = makeStyles((theme) => ({\n    addItemIcon: {\n        float: 'right',\n        bottom: '0px',\n        left: 0\n    },\n    widget: {\n        padding: 15\n    }\n}))\n\nconst DisplayAllEmployeeInterests = (props) => {\n\n    const dispatch = useDispatch()\n\n    const classes = useStyles()\n\n    const employee_id = props.employee_id\n\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    useEffect(() => {\n        dispatch(fetchEmployeeInterests(employee_id))\n    },[dispatch])\n\n    let [open, setOpen]         = useState(false)\n    let [interest, setInterest] = useState('')\n\n    let interests = useSelector(state => state.interests.interests)\n    let loading   = useSelector(state => state.interests.loading)\n    let hasErrors = useSelector(state => state.interests.hasErrors)\n\n    const Transition = React.forwardRef(function Transition(props, ref) {\n        return <Slide direction=\"up\" ref={ref} {...props} />;\n    })\n\n    if (loading) {\n        return(\n            <ShowLoading />\n        )\n    } else if (hasErrors) {\n        return(\n            <ShowErrors />\n        )\n    } else if (interests) {\n        return(\n            <>\n                <Dialog\n                    fullScreen={fullScreen}\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    TransitionComponent={Transition}\n                    aria-labelledby=\"responsive-dialog-title\"\n                >\n                    <DialogTitle id=\"responsive-dialog-title\">{\"Create a new exercise\"}</DialogTitle>\n                    \n                    <DialogContent>\n                        <DialogContentText>\n                            Add a new interest or hobby below\n\n                            <form className={classes.form} noValidate>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            autoFocus\n                                            variant=\"outlined\"\n                                            required\n                                            id=\"InterestName\"\n                                            label=\"Interest or Hobby name\"\n                                            name=\"name\"\n                                            side=\"medium\"\n                                            autoComplete=\"interestName\"\n                                            value={interest}\n                                            onChange={(e) => setInterest(e.target.value)}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </DialogContentText>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button autoFocus onClick={handleSubmit} color=\"primary\">Create</Button>\n\n                        <Button autoFocus onClick={() => setOpen(false)} color=\"primary\">\n                            Cancel\n                        </Button>\n\n                    </DialogActions>\n                </Dialog>\n\n\n\n\n\n\n\n\n\n\n\n\n                <IconButton\n                    className={classes.addItemIcon}\n                    color=\"primary\"\n                    aria-label=\"Add new interest\"\n                >\n                    <AddCircleIcon style={{ fontSize: 30 }} />\n                </IconButton>\n                \n                <Paper elevation={3} className={classes.widget}>\n                    <Typoegraphy variant=\"h5\" style={{textAlign: 'center'}} gutterBottom>Interests/Hobbies</Typoegraphy>\n                    <List dense=\"true\">\n                        {interests.map((interest) => (\n                            <ListItem key={interest.id}>\n                                <ListItemText\n                                    primary={interest.name}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Paper>\n            </>\n        )\n    }\n}\n\nexport default DisplayAllEmployeeInterests"]},"metadata":{},"sourceType":"module"}