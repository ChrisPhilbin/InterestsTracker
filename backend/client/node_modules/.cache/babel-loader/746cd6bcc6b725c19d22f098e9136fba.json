{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/static/EmployeeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllEmployees } from '../actions/EmployeeActions';\nimport Grid from '@material-ui/core/Grid';\nimport EmployeeCard from '../components/employees/EmployeeCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { Link } from 'react-router-dom';\nimport ShowLoading from '../util/ShowLoading';\nimport ShowErrors from '../util/ShowErrors';\nimport Container from '@material-ui/core/Container';\nimport EmployeeDashboard from '../components/dashboard/EmployeeDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  floatingButton: {\n    position: 'fixed',\n    bottom: 0,\n    right: 0\n  }\n}));\n\nconst EmployeeList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  let loading = useSelector(state => state.employees.loading);\n  let hasErrors = useSelector(state => state.employees.hasErrors);\n  let employees = useSelector(state => state.employees.employees);\n  useEffect(() => {\n    dispatch(fetchAllEmployees());\n  }, [dispatch]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else if (hasErrors) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ShowErrors, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else if (employees) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.floatingButton,\n        color: \"primary\",\n        \"aria-label\": \"Add Employuee\",\n        component: Link,\n        to: \"/employees/new\",\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          style: {\n            color: '#005151',\n            fontSize: 60\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        style: {\n          marginTop: 30\n        },\n        children: /*#__PURE__*/_jsxDEV(EmployeeDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        style: {\n          marginTop: 30\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(EmployeeCard, {\n            employee: employee\n          }, employee.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, employee.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(EmployeeList, \"tmm3u+Fci/Cp3yyVzc0Srn9Dg/M=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector, useSelector];\n});\n\n_c = EmployeeList;\nexport default EmployeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/static/EmployeeList.js"],"names":["React","useEffect","useDispatch","useSelector","fetchAllEmployees","Grid","EmployeeCard","makeStyles","IconButton","AddCircleIcon","Link","ShowLoading","ShowErrors","Container","EmployeeDashboard","useStyles","theme","floatingButton","position","bottom","right","EmployeeList","dispatch","classes","loading","state","employees","hasErrors","color","fontSize","marginTop","map","employee","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchAllEmployees } from '../actions/EmployeeActions'\nimport Grid from '@material-ui/core/Grid'\nimport EmployeeCard from '../components/employees/EmployeeCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { Link } from 'react-router-dom'\nimport ShowLoading from '../util/ShowLoading'\nimport ShowErrors from '../util/ShowErrors'\nimport Container from '@material-ui/core/Container'\nimport EmployeeDashboard from '../components/dashboard/EmployeeDashboard'\n\nconst useStyles = makeStyles((theme) => ({\n    floatingButton: {\n        position: 'fixed',\n        bottom: 0,\n        right: 0\n    }\n}))\n\nconst EmployeeList = () => {\n\n    const dispatch = useDispatch()\n\n    const classes = useStyles()\n\n    let loading   = useSelector(state => state.employees.loading)\n    let hasErrors = useSelector(state => state.employees.hasErrors)\n    let employees = useSelector(state => state.employees.employees)\n\n    useEffect(() => {\n        dispatch(fetchAllEmployees())\n    },[dispatch])\n\n    if (loading) {\n        return(\n            <>\n                <ShowLoading />\n            </>\n        )\n    } else if (hasErrors) {\n        return(\n            <>\n                <ShowErrors />\n            </>\n        )\n    } else if (employees) {\n        return(\n            <Container maxWidth=\"lg\" >\n                <IconButton\n                    className={classes.floatingButton}\n                    color=\"primary\"\n                    aria-label=\"Add Employuee\"\n                    component={Link}\n                    to=\"/employees/new\"\n                >\n                    <AddCircleIcon style={{ color: '#005151', fontSize: 60 }} />\n                </IconButton>\n\n                <Grid container spacing={3} style={{ marginTop: 30 }}>\n                    <EmployeeDashboard />\n                </Grid>\n\n                <Grid container spacing={3} style={{marginTop: 30}}>\n                    {employees.map((employee) => (\n                        <Grid item xs={12} sm={6} key={employee.id}>\n                            <EmployeeCard employee={employee} key={employee.id}/>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default EmployeeList"]},"metadata":{},"sourceType":"module"}