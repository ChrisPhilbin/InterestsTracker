{"ast":null,"code":"//custom hook that takes in a date and determines how many minutes have gone by and returns t/f if it's more than 4 days\nexport default useCheckDate = date => {\n  let currentDate = new Date();\n  let previousDate = new Date(date);\n  let minutesSinceLastInteraction = Math.round((currentDate - previousDate) / 1000 / 60);\n  return minutesSinceLastInteraction > 5760 ? true : false;\n};","map":{"version":3,"sources":["/home/user/development/react/interests/src/hooks/useCheckDate.js"],"names":["useCheckDate","date","currentDate","Date","previousDate","minutesSinceLastInteraction","Math","round"],"mappings":"AAAA;AACA,eAAeA,YAAY,GAAIC,IAAD,IAAU;AAEpC,MAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,MAAIC,YAAY,GAAG,IAAID,IAAJ,CAASF,IAAT,CAAnB;AAEA,MAAII,2BAA2B,GAAGC,IAAI,CAACC,KAAL,CAAa,CAACL,WAAW,GAAGE,YAAf,IAA6B,IAA9B,GAAoC,EAAhD,CAAlC;AAEA,SAAOC,2BAA2B,GAAG,IAA9B,GAAqC,IAArC,GAA4C,KAAnD;AACH,CARD","sourcesContent":["//custom hook that takes in a date and determines how many minutes have gone by and returns t/f if it's more than 4 days\nexport default useCheckDate = (date) => {\n\n    let currentDate = new Date()\n    let previousDate = new Date(date)\n\n    let minutesSinceLastInteraction = Math.round((((currentDate - previousDate)/1000)/60))\n\n    return minutesSinceLastInteraction > 5760 ? true : false\n}"]},"metadata":{},"sourceType":"module"}