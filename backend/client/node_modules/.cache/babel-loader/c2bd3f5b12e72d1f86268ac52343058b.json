{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/employees/EmployeeCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport useCheckDate from '../../hooks/useCheckDate';\nimport { deleteOneEmployee } from '../../actions/EmployeeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  checkDate: {\n    float: 'right',\n    top: '10px',\n    right: '15px'\n  },\n  root: {\n    minWidth: 470\n  }\n}));\n\nconst EmployeeCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  dayjs.extend(relativeTime);\n  let employee = props.employee;\n  let lastInteraction = dayjs(props.employee.last_interaction).fromNow();\n  let [openDialog, setOpenDialog] = useState(false);\n\n  const handleDelete = employee_id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteOneEmployee(employee_id));\n    }\n  };\n\n  const handleOpenDialog = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.checkDate,\n        children: useCheckDate(props.employee.last_interaction) ? /*#__PURE__*/_jsxDEV(WarningIcon, {\n          style: {\n            color: 'red',\n            fontSize: 45\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 71\n        }, this) : /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n          style: {\n            color: 'green',\n            fontSize: 45\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 125\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: employee.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        children: [\"Last interaction: \", lastInteraction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/employees/${employee.id}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          children: \"View/Edit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => handleOpenDialog(),\n        children: \"Log interaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => handleDelete(employee.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeCard, \"sJeRyy12hDpVojVvt+XJCc4+6uk=\", false, function () {\n  return [useStyles, useDispatch, useCheckDate];\n});\n\n_c = EmployeeCard;\nexport default EmployeeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeCard\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/employees/EmployeeCard.js"],"names":["React","useState","useDispatch","Button","Card","CardActions","CardContent","CheckCircleOutlineIcon","dayjs","Link","makeStyles","Typography","relativeTime","WarningIcon","useCheckDate","deleteOneEmployee","useStyles","theme","checkDate","float","top","right","root","minWidth","EmployeeCard","props","classes","dispatch","extend","employee","lastInteraction","last_interaction","fromNow","openDialog","setOpenDialog","handleDelete","employee_id","window","confirm","handleOpenDialog","color","fontSize","name","id","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport dayjs from 'dayjs'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport useCheckDate from '../../hooks/useCheckDate'\nimport { deleteOneEmployee } from '../../actions/EmployeeActions'\n\nconst useStyles = makeStyles((theme) => ({\n    checkDate: {\n        float: 'right',\n        top: '10px',\n        right: '15px',\n    },\n    root: {\n        minWidth: 470,\n    }\n}))\n\n\nconst EmployeeCard = (props) => {\n\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n\n    dayjs.extend(relativeTime)\n\n    let employee = props.employee\n    let lastInteraction = dayjs(props.employee.last_interaction).fromNow()\n\n    let [openDialog, setOpenDialog] = useState(false)\n    \n    const handleDelete = (employee_id) => {\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(deleteOneEmployee(employee_id))\n        }\n    }\n\n    const handleOpenDialog = () => {\n\n    }\n    \n    return(\n        <Card variant=\"outlined\">\n            <CardContent>\n                <span className={classes.checkDate}>\n                    { useCheckDate(props.employee.last_interaction) ? <WarningIcon style={{color: 'red', fontSize: 45}}/> : <CheckCircleOutlineIcon  style={{color: 'green', fontSize: 45}}/>}\n                </span>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {employee.name}\n                </Typography>\n                <Typography color=\"textSecondary\">\n                    Last interaction: {lastInteraction}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Link to={`/employees/${employee.id}`} style={{ textDecoration: 'none'}}><Button size=\"small\" color=\"primary\">View/Edit Details</Button></Link>\n                <Button size=\"small\" color=\"primary\" onClick={() => handleOpenDialog()}>Log interaction</Button>\n                <Button size=\"small\" color=\"primary\" onClick={() => handleDelete(employee.id)}>Delete</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default EmployeeCard"]},"metadata":{},"sourceType":"module"}