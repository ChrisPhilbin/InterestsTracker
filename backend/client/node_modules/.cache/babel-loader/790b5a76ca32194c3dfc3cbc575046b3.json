{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/interactions/DisplayAllEmployeeInteractions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployeeInteractions } from '../../actions/InteractionActions';\nimport ShowErrors from '../../util/ShowErrors';\nimport ShowLoading from '../../util/ShowLoading';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typoegraphy from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  widget: {\n    padding: 15,\n    borderRadius: 15\n  }\n}));\n\nconst DisplayAllEmployeeInteractions = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const employee_id = props.employee_id;\n  useEffect(() => {\n    dispatch(fetchEmployeeInteractions(employee_id));\n  }, []);\n  let interactions = useSelector(state => state.interactions.interactions);\n  let loading = useSelector(state => state.interactions.loading);\n  let hasErrors = useSelector(state => state.interactions.hasErrors);\n  console.log(interactions, \"Interactions\");\n\n  if (hasErrors) {\n    return /*#__PURE__*/_jsxDEV(ShowErrors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (interactions) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.widget,\n      elevation: 3,\n      square: false,\n      style: {\n        padding: 15,\n        marginBottom: 25\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Recent interactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date of interaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Type of interaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Interaction notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: interactions.map(interaction => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: interaction.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: interaction.kind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: interaction.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, interaction.interaction_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(DisplayAllEmployeeInteractions, \"EYQOtCUuprUCyopHoFiLi/RJ/Js=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = DisplayAllEmployeeInteractions;\nexport default DisplayAllEmployeeInteractions;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllEmployeeInteractions\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/interactions/DisplayAllEmployeeInteractions.js"],"names":["React","useEffect","useDispatch","useSelector","fetchEmployeeInteractions","ShowErrors","ShowLoading","makeStyles","Paper","Typoegraphy","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","useStyles","theme","widget","padding","borderRadius","DisplayAllEmployeeInteractions","props","classes","dispatch","employee_id","interactions","state","loading","hasErrors","console","log","marginBottom","map","interaction","created_at","kind","notes","interaction_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchEmployeeInteractions } from '../../actions/InteractionActions'\nimport ShowErrors from '../../util/ShowErrors'\nimport ShowLoading from '../../util/ShowLoading'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typoegraphy from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nconst useStyles = makeStyles((theme) => ({\n    widget: {\n        padding: 15,\n        borderRadius: 15\n    }\n}))\n\nconst DisplayAllEmployeeInteractions = (props) => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const employee_id = props.employee_id\n\n    useEffect(() => {\n        dispatch(fetchEmployeeInteractions(employee_id))\n    }, [])\n\n    let interactions = useSelector(state => state.interactions.interactions)\n    let loading      = useSelector(state => state.interactions.loading)\n    let hasErrors    = useSelector(state => state.interactions.hasErrors)\n\n    console.log(interactions, \"Interactions\")\n\n    if (hasErrors) {\n        return(\n            <ShowErrors />\n        )\n    }\n\n    if (loading) {\n        return(\n            <ShowLoading />\n        )\n    }\n\n    if (interactions) {\n        return(\n            <Paper className={classes.widget} elevation={3} square={false} style={{ padding: 15, marginBottom: 25 }}>\n                <Typoegraphy variant=\"h4\" gutterBottom>Recent interactions</Typoegraphy>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell><strong>Date of interaction</strong></TableCell>\n                            <TableCell>Type of interaction</TableCell>\n                            <TableCell>Interaction notes</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {interactions.map((interaction) => (\n                        <TableRow key={interaction.interaction_id}>\n                            <TableCell>{interaction.created_at}</TableCell>\n                            <TableCell>{interaction.kind}</TableCell>\n                            <TableCell>{interaction.notes}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n        )\n    } \n}\n\nexport default DisplayAllEmployeeInteractions"]},"metadata":{},"sourceType":"module"}