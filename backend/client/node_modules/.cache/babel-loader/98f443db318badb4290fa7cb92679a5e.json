{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/interests/DisplayAllEmployeeInterests.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployeeInterests, fetchPostNewInterest } from '../../actions/InterestActions';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typoegraphy from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShowLoading from '../../util/ShowLoading';\nimport ShowErrors from '../../util/ShowErrors';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  addItemIcon: {\n    float: 'right',\n    bottom: '0px',\n    left: 0\n  },\n  widget: {\n    padding: 15\n  }\n}));\n\nconst DisplayAllEmployeeInterests = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const employee_id = props.employee_id;\n  useEffect(() => {\n    dispatch(fetchEmployeeInterests(employee_id));\n  }, [dispatch]);\n  let [open, setOpen] = useState(false);\n  let [newInterest, setNewInterest] = useState('');\n  let interests = useSelector(state => state.interests.interests);\n  let loading = useSelector(state => state.interests.loading);\n  let hasErrors = useSelector(state => state.interests.hasErrors);\n  console.log(interests, \"Interests array from global store\");\n\n  const handleSubmit = () => {\n    let interestSubmit = {\n      name: newInterest,\n      employee_id: employee_id\n    };\n    dispatch(fetchPostNewInterest(interestSubmit));\n    setOpen(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  } else if (hasErrors) {\n    return /*#__PURE__*/_jsxDEV(ShowErrors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  } else if (interests) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: () => setOpen(false),\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Add a new interest or hobby\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Add a new interest or hobby below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Interest name\",\n            fullWidth: true,\n            onChange: e => setNewInterest(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleSubmit(),\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.addItemIcon,\n        color: \"primary\",\n        \"aria-label\": \"Add new interest\",\n        onClick: () => setOpen(true),\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          style: {\n            fontSize: 30\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.widget,\n        children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n          variant: \"h5\",\n          style: {\n            textAlign: 'center'\n          },\n          gutterBottom: true,\n          children: \"Interests/Hobbies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: \"true\",\n          children: interests.map(interest => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: interest.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, interest.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DisplayAllEmployeeInterests, \"N2TyevsXnGVWdSZsJR5aoM0G+5w=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector, useSelector];\n});\n\n_c = DisplayAllEmployeeInterests;\nexport default DisplayAllEmployeeInterests;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllEmployeeInterests\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/interests/DisplayAllEmployeeInterests.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchEmployeeInterests","fetchPostNewInterest","List","ListItem","ListItemText","Paper","IconButton","AddCircleIcon","Typoegraphy","makeStyles","ShowLoading","ShowErrors","useMediaQuery","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Button","useStyles","theme","addItemIcon","float","bottom","left","widget","padding","DisplayAllEmployeeInterests","props","dispatch","classes","employee_id","open","setOpen","newInterest","setNewInterest","interests","state","loading","hasErrors","console","log","handleSubmit","interestSubmit","name","e","target","value","fontSize","textAlign","map","interest","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchEmployeeInterests, fetchPostNewInterest } from '../../actions/InterestActions'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport Typoegraphy from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ShowLoading from '../../util/ShowLoading'\nimport ShowErrors from '../../util/ShowErrors'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n    addItemIcon: {\n        float: 'right',\n        bottom: '0px',\n        left: 0\n    },\n    widget: {\n        padding: 15\n    }\n}))\n\nconst DisplayAllEmployeeInterests = (props) => {\n\n    const dispatch = useDispatch()\n\n    const classes = useStyles()\n\n    const employee_id = props.employee_id\n\n    useEffect(() => {\n        dispatch(fetchEmployeeInterests(employee_id))\n    },[dispatch])\n\n    let [open, setOpen]         = useState(false)\n    let [newInterest, setNewInterest] = useState('')\n\n    let interests = useSelector(state => state.interests.interests)\n    let loading   = useSelector(state => state.interests.loading)\n    let hasErrors = useSelector(state => state.interests.hasErrors)\n\n    console.log(interests, \"Interests array from global store\")\n\n    const handleSubmit = () => {\n        let interestSubmit = {\n            name: newInterest,\n            employee_id: employee_id\n        }\n        dispatch(fetchPostNewInterest(interestSubmit))\n        setOpen(false)\n    }\n\n    if (loading) {\n        return(\n            <ShowLoading />\n        )\n    } else if (hasErrors) {\n        return(\n            <ShowErrors />\n        )\n    } else if (interests) {\n        return(\n            <>\n                <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Add a new interest or hobby</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Add a new interest or hobby below\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Interest name\"\n                            fullWidth\n                            onChange={(e) => setNewInterest(e.target.value)}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleSubmit()} color=\"primary\">\n                        Save\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <IconButton\n                    className={classes.addItemIcon}\n                    color=\"primary\"\n                    aria-label=\"Add new interest\"\n                    onClick={() => setOpen(true)}\n                >\n                    <AddCircleIcon style={{ fontSize: 30 }} />\n                </IconButton>\n                \n                <Paper elevation={3} className={classes.widget}>\n                    <Typoegraphy variant=\"h5\" style={{textAlign: 'center'}} gutterBottom>Interests/Hobbies</Typoegraphy>\n                    <List dense=\"true\">\n                        {interests.map((interest) => (\n                            <ListItem key={interest.id}>\n                                <ListItemText\n                                    primary={interest.name}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Paper>\n            </>\n        )\n    }\n}\n\nexport default DisplayAllEmployeeInterests"]},"metadata":{},"sourceType":"module"}