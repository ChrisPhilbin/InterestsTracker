{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/notes/DisplayAllEmployeeNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployeeNotes, fetchPostNewNote, fetchDeleteNote } from '../../actions/NoteActions';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Typoegraphy from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShowLoading from '../../util/ShowLoading';\nimport ShowErrors from '../../util/ShowErrors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  addItemIcon: {\n    float: 'right',\n    bottom: '0px',\n    left: 0\n  },\n  widget: {\n    padding: 15,\n    borderRadius: 15\n  }\n}));\n\nconst DisplayAllEmployeeNotes = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const employee_id = props.employee_id;\n  useEffect(() => {\n    dispatch(fetchEmployeeNotes(employee_id));\n  }, [dispatch]);\n  let [open, setOpen] = useState(false);\n  let [newNote, setNewNote] = useState('');\n  let notes = useSelector(state => state.notes.notes);\n  let loading = useSelector(state => state.notes.loading);\n  let hasErrors = useSelector(state => state.notes.hasErrors);\n\n  const handleSubmit = () => {\n    let noteSubmit = {\n      contents: newNote,\n      employee_id: employee_id\n    };\n    dispatch(fetchPostNewNote(noteSubmit));\n    setOpen(false);\n  };\n\n  const handleDelete = note_id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(fetchDeleteNote(employee_id, note_id));\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ShowLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  } else if (hasErrors) {\n    return /*#__PURE__*/_jsxDEV(ShowErrors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  } else if (notes) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: () => setOpen(false),\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Add a new note below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Add a note/reminder below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"content\",\n            label: \"Notes/Thoughts/Ideas...\",\n            multiline: true,\n            rows: 6,\n            fullWidth: true,\n            variant: \"outlined\",\n            onChange: e => setNewNote(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleSubmit(),\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.addItemIcon,\n        color: \"primary\",\n        \"aria-label\": \"Add new note\",\n        onClick: () => setOpen(true),\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          style: {\n            fontSize: 30\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.widget,\n        square: false,\n        children: [/*#__PURE__*/_jsxDEV(Typoegraphy, {\n          variant: \"h5\",\n          style: {\n            textAlign: 'center'\n          },\n          gutterBottom: true,\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: notes.map(note => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n                style: {\n                  size: 10,\n                  color: 'red'\n                },\n                onClick: () => handleDelete(note.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${note.contents}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 145\n            }, this)]\n          }, note.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DisplayAllEmployeeNotes, \"mhnsWlAmLQcAZqoe5zsxVO6ilKc=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector, useSelector];\n});\n\n_c = DisplayAllEmployeeNotes;\nexport default DisplayAllEmployeeNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllEmployeeNotes\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/notes/DisplayAllEmployeeNotes.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchEmployeeNotes","fetchPostNewNote","fetchDeleteNote","List","ListItem","ListItemText","Paper","IconButton","AddCircleIcon","Typoegraphy","makeStyles","ShowLoading","ShowErrors","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Button","HighlightOffIcon","useStyles","theme","addItemIcon","float","bottom","left","widget","padding","borderRadius","DisplayAllEmployeeNotes","props","dispatch","classes","employee_id","open","setOpen","newNote","setNewNote","notes","state","loading","hasErrors","handleSubmit","noteSubmit","contents","handleDelete","note_id","window","confirm","e","target","value","fontSize","textAlign","map","note","size","color","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchEmployeeNotes, fetchPostNewNote, fetchDeleteNote } from '../../actions/NoteActions'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport Typoegraphy from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ShowLoading from '../../util/ShowLoading'\nimport ShowErrors from '../../util/ShowErrors'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\n\nconst useStyles = makeStyles((theme) => ({\n    addItemIcon: {\n        float: 'right',\n        bottom: '0px',\n        left: 0\n    },\n    widget: {\n        padding: 15,\n        borderRadius: 15\n    }\n}))\n\nconst DisplayAllEmployeeNotes = (props) => {\n\n    const dispatch = useDispatch()\n\n    const classes = useStyles()\n\n    const employee_id = props.employee_id\n\n    useEffect(() => {\n        dispatch(fetchEmployeeNotes(employee_id))\n    },[dispatch])\n\n    let [open, setOpen]       = useState(false)\n    let [newNote, setNewNote] = useState('')\n\n    let notes      = useSelector(state => state.notes.notes)\n    let loading    = useSelector(state => state.notes.loading)\n    let hasErrors  = useSelector(state => state.notes.hasErrors)\n\n    const handleSubmit = () => {\n        let noteSubmit = {\n            contents: newNote,\n            employee_id: employee_id\n        }\n        dispatch(fetchPostNewNote(noteSubmit))\n        setOpen(false)\n    }\n\n    const handleDelete = note_id => {\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(fetchDeleteNote(employee_id, note_id))\n        }\n    }\n\n    if (loading) {\n        return(\n            <ShowLoading />\n        )\n    } else if (hasErrors) {\n        return(\n            <ShowErrors />\n        )\n    } else if (notes) {\n        return(\n            <>\n                <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Add a new note below</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Add a note/reminder below\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"content\"\n                            label=\"Notes/Thoughts/Ideas...\"\n                            multiline\n                            rows={6}\n                            fullWidth\n                            variant=\"outlined\"\n                            onChange={(e) => setNewNote(e.target.value)}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleSubmit()} color=\"primary\">\n                        Save\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <IconButton\n                    className={classes.addItemIcon}\n                    color=\"primary\"\n                    aria-label=\"Add new note\"\n                    onClick={() => setOpen(true)}\n                >\n                    <AddCircleIcon style={{ fontSize: 30 }} />\n                </IconButton>\n                \n                <Paper elevation={3} className={classes.widget} square={false}>\n                    <Typoegraphy variant=\"h5\" style={{textAlign: 'center'}} gutterBottom>Notes</Typoegraphy>\n                    <List dense={true}>\n                        {notes.map((note) => (\n                            <ListItem key={note.id}>\n                                <span><HighlightOffIcon style={{ size: 10, color: 'red' }} onClick={() => handleDelete(note.id)} /></span>&nbsp;<ListItemText primary={`${note.contents}`} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Paper>\n            </>\n        )\n    }\n}\n\nexport default DisplayAllEmployeeNotes"]},"metadata":{},"sourceType":"module"}