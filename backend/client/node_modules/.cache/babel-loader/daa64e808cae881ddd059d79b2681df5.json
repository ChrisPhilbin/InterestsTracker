{"ast":null,"code":"var _jsxFileName = \"/home/user/development/react/interests/src/components/employees/EditEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOneEmployee } from '../../actions/EmployeeActions';\nimport useFormatDate from '../../hooks/useFormatDate';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditEmployee = props => {\n  _s();\n\n  const employee_id = props.match.params.employee_id;\n  let [employee, setEmployee] = useState({});\n  useEffect(() => {\n    fetch(`http://localhost:3001/employees/${employee_id}`).then(response => response.json()).then(data => setEmployee(data)).catch(error => console.log(error));\n  }, [employee_id]);\n  console.log(useFormatDate(employee.hire_date));\n\n  const handleSubmit = () => {\n    alert(\"Editing!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        padding: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: [\"Editing details for \", employee.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"fullname\",\n          label: \"Full name\",\n          variant: \"outlined\",\n          value: employee.name,\n          onChange: e => setEmployee({ ...employee,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"MM/dd/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Hire date\",\n            defaultValue: useFormatDate(employee.hire_date),\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: 15\n          },\n          onClick: () => handleSubmit(),\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditEmployee, \"7AGTn2DbSbW+NvYiBRIcA/S07jI=\", false, function () {\n  return [useFormatDate, useFormatDate];\n});\n\n_c = EditEmployee;\nexport default EditEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEmployee\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/components/employees/EditEmployee.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchOneEmployee","useFormatDate","Grid","Typography","TextField","Button","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","EditEmployee","props","employee_id","match","params","employee","setEmployee","fetch","then","response","json","data","catch","error","console","log","hire_date","handleSubmit","alert","padding","name","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchOneEmployee } from '../../actions/EmployeeActions'\nimport useFormatDate from '../../hooks/useFormatDate'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\n\nconst EditEmployee = (props) => {\n\n    const employee_id = props.match.params.employee_id\n\n    let [employee, setEmployee] = useState({})\n\n    useEffect(() => {\n        fetch(`http://localhost:3001/employees/${employee_id}`)\n        .then(response => response.json())\n        .then(data => setEmployee(data))\n        .catch((error) => console.log(error))\n    }, [employee_id])\n\n    console.log(useFormatDate(employee.hire_date))\n\n    const handleSubmit = () => {\n        alert(\"Editing!\")\n    }\n    \n    return (\n        <>\n            <Grid style={{ padding: 40 }}>\n                <Typography variant=\"h4\" gutterBottom>Editing details for {employee.name}</Typography>\n\n                <Grid item>\n                    <TextField\n                        required\n                        id=\"fullname\"\n                        label=\"Full name\"\n                        variant=\"outlined\"\n                        value={employee.name}\n                        onChange={(e) => setEmployee({...employee, name: e.target.value})}\n                        \n                    />\n                </Grid>\n\n\n                <Grid item>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"Hire date\"\n                            defaultValue={useFormatDate(employee.hire_date)}                            \n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n\n                <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" style={{ marginTop: 15 }} onClick={() => handleSubmit()}>Save changes</Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default EditEmployee"]},"metadata":{},"sourceType":"module"}