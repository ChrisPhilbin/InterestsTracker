{"ast":null,"code":"export const GET_EMPLOYEES = \"GET_EMPLOYEES\";\nexport const GET_EMPLOYEES_SUCCESS = \"GET_EMPLOYEES_SUCCESS\";\nexport const GET_EMPLOYEES_FAILURE = \"GET_EMPLOYEES_FAILURE\";\nexport const GET_ONE_EMPLOYEE = \"GET_ONE_EMPLOYEE\";\nexport const GET_ONE_EMPLOYEE_SUCCESS = \"GET_ONE_EMPLOYEE_SUCCESS\";\nexport const GET_ONE_EMPLOYEE_FAILURE = \"GET_ONE_EMPLOYEE_FAILURE\";\nexport const EMPLOYEE_CREATED_SUCCESS = \"EMPLOYEE_CREATED_SUCCESS\";\nexport const EMPLOYEE_CREATED_FAILURE = \"EMPLOYEE_CREATED_FAILURE\";\nexport const getEmployees = () => ({\n  type: GET_EMPLOYEES\n});\nexport const getEmployeesSuccess = employees => ({\n  type: GET_EMPLOYEES_SUCCESS,\n  payload: employees\n});\nexport const getEmployeesFailure = error => ({\n  type: GET_EMPLOYEES_FAILURE,\n  payload: error\n});\nexport const fetchAllEmployees = () => {\n  return dispatch => {\n    dispatch(getEmployees());\n    fetch('http://localhost:3001/employees').then(response => response.json()).then(data => {\n      dispatch(getEmployeesSuccess(data));\n    }).catch(error => {\n      dispatch(getEmployeesFailure(error));\n    });\n  };\n};\nexport const getOneEmployee = () => ({\n  type: GET_ONE_EMPLOYEE\n});\nexport const getOneEmployeeSuccess = employee => ({\n  type: GET_ONE_EMPLOYEE_SUCCESS,\n  payload: employee\n});\nexport const GetOneEmployeeFailure = error => ({\n  type: GET_ONE_EMPLOYEE_FAILURE,\n  payload: error\n});\n_c = GetOneEmployeeFailure;\nexport const fetchOneEmployee = employee_id => {\n  return dispatch => {\n    dispatch(getOneEmployee());\n    fetch(`http://localhost:3001/employees/${employee_id}`).then(response => response.json()).then(data => {\n      dispatch(getOneEmployeeSuccess(data));\n    }).catch(error => {\n      dispatch(GetOneEmployeeFailure(error));\n    });\n  };\n};\nexport const employeeCreatedSuccess = employee => ({\n  type: EMPLOYEE_CREATED_SUCCESS,\n  payload: employee\n});\nexport const employeeCreatedFailure = error => ({\n  type: EMPLOYEE_CREATED_FAILURE,\n  payload: error\n});\nexport const fetchPostNewEmployee = employee => {\n  return dispatch => {\n    fetch('http://localhost:3001/employees', {\n      method: 'POST',\n      body: JSON.stringify(employee),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      dispatch(employeeCreatedSuccess(data));\n    }).catch(error => {\n      dispatch(employeeCreatedFailure(error));\n    });\n  };\n};\nexport const deleteOneEmployee = employee_id => {\n  return dispatch => {\n    fetch(`http://localhost:3001/employees/${employee_id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(dispatch(fetchAllEmployees()));\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GetOneEmployeeFailure\");","map":{"version":3,"sources":["/home/user/development/react/interests/src/actions/EmployeeActions.js"],"names":["GET_EMPLOYEES","GET_EMPLOYEES_SUCCESS","GET_EMPLOYEES_FAILURE","GET_ONE_EMPLOYEE","GET_ONE_EMPLOYEE_SUCCESS","GET_ONE_EMPLOYEE_FAILURE","EMPLOYEE_CREATED_SUCCESS","EMPLOYEE_CREATED_FAILURE","getEmployees","type","getEmployeesSuccess","employees","payload","getEmployeesFailure","error","fetchAllEmployees","dispatch","fetch","then","response","json","data","catch","getOneEmployee","getOneEmployeeSuccess","employee","GetOneEmployeeFailure","fetchOneEmployee","employee_id","employeeCreatedSuccess","employeeCreatedFailure","fetchPostNewEmployee","method","body","JSON","stringify","headers","deleteOneEmployee"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAc,eAAjC;AACP,OAAO,MAAMC,qBAAqB,GAAM,uBAAjC;AACP,OAAO,MAAMC,qBAAqB,GAAM,uBAAjC;AAEP,OAAO,MAAMC,gBAAgB,GAAW,kBAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,YAAY,GAAG,OACxB;AAAEC,EAAAA,IAAI,EAAET;AAAR,CADwB,CAArB;AAIP,OAAO,MAAMU,mBAAmB,GAAIC,SAAD,KAC/B;AAAEF,EAAAA,IAAI,EAAER,qBAAR;AAA+BW,EAAAA,OAAO,EAAED;AAAxC,CAD+B,CAA5B;AAIP,OAAO,MAAME,mBAAmB,GAAIC,KAAD,KAC/B;AAAEL,EAAAA,IAAI,EAAEP,qBAAR;AAA+BU,EAAAA,OAAO,EAAEE;AAAxC,CAD+B,CAA5B;AAIP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACAS,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVL,MAAAA,QAAQ,CAACN,mBAAmB,CAACW,IAAD,CAApB,CAAR;AACH,KAJD,EAKCC,KALD,CAKOR,KAAK,IAAI;AACZE,MAAAA,QAAQ,CAACH,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACH,KAPD;AAQH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMS,cAAc,GAAG,OAC1B;AAAEd,EAAAA,IAAI,EAAEN;AAAR,CAD0B,CAAvB;AAIP,OAAO,MAAMqB,qBAAqB,GAAIC,QAAD,KACjC;AAAEhB,EAAAA,IAAI,EAAEL,wBAAR;AAAkCQ,EAAAA,OAAO,EAAEa;AAA3C,CADiC,CAA9B;AAIP,OAAO,MAAMC,qBAAqB,GAAIZ,KAAD,KACjC;AAAEL,EAAAA,IAAI,EAAEJ,wBAAR;AAAkCO,EAAAA,OAAO,EAAEE;AAA3C,CADiC,CAA9B;KAAMY,qB;AAIb,OAAO,MAAMC,gBAAgB,GAAIC,WAAD,IAAiB;AAC7C,SAAQZ,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACO,cAAc,EAAf,CAAR;AACAN,IAAAA,KAAK,CAAE,mCAAkCW,WAAY,EAAhD,CAAL,CACCV,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVL,MAAAA,QAAQ,CAACQ,qBAAqB,CAACH,IAAD,CAAtB,CAAR;AACH,KAJD,EAKCC,KALD,CAKOR,KAAK,IAAI;AACZE,MAAAA,QAAQ,CAACU,qBAAqB,CAACZ,KAAD,CAAtB,CAAR;AACH,KAPD;AAQH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMe,sBAAsB,GAAIJ,QAAD,KAClC;AAAEhB,EAAAA,IAAI,EAAEH,wBAAR;AAAkCM,EAAAA,OAAO,EAAEa;AAA3C,CADkC,CAA/B;AAIP,OAAO,MAAMK,sBAAsB,GAAIhB,KAAD,KAClC;AAAEL,EAAAA,IAAI,EAAEF,wBAAR;AAAkCK,EAAAA,OAAO,EAAEE;AAA3C,CADkC,CAA/B;AAIP,OAAO,MAAMiB,oBAAoB,GAAIN,QAAD,IAAc;AAC9C,SAAQT,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCe,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf,CAF+B;AAGrCW,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAH4B,KAApC,CAAL,CAKClB,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMMG,IAAI,IAAI;AACVL,MAAAA,QAAQ,CAACa,sBAAsB,CAACR,IAAD,CAAvB,CAAR;AACH,KARD,EASCC,KATD,CASOR,KAAK,IAAI;AACZE,MAAAA,QAAQ,CAACc,sBAAsB,CAAChB,KAAD,CAAvB,CAAR;AACH,KAXD;AAYH,GAbD;AAcH,CAfM;AAiBP,OAAO,MAAMuB,iBAAiB,GAAIT,WAAD,IAAiB;AAC9C,SAAQZ,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,mCAAkCW,WAAY,EAAhD,EAAmD;AACpDI,MAAAA,MAAM,EAAE,QAD4C;AAEpDI,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF2C,KAAnD,CAAL,CAIClB,IAJD,CAIMF,QAAQ,CAACD,iBAAiB,EAAlB,CAJd;AAKH,GAND;AAOH,CARM","sourcesContent":["export const GET_EMPLOYEES            = \"GET_EMPLOYEES\"\nexport const GET_EMPLOYEES_SUCCESS    = \"GET_EMPLOYEES_SUCCESS\"\nexport const GET_EMPLOYEES_FAILURE    = \"GET_EMPLOYEES_FAILURE\"\n\nexport const GET_ONE_EMPLOYEE         = \"GET_ONE_EMPLOYEE\"\nexport const GET_ONE_EMPLOYEE_SUCCESS = \"GET_ONE_EMPLOYEE_SUCCESS\"\nexport const GET_ONE_EMPLOYEE_FAILURE = \"GET_ONE_EMPLOYEE_FAILURE\"\n\nexport const EMPLOYEE_CREATED_SUCCESS = \"EMPLOYEE_CREATED_SUCCESS\"\nexport const EMPLOYEE_CREATED_FAILURE = \"EMPLOYEE_CREATED_FAILURE\"\n\nexport const getEmployees = () => (\n    { type: GET_EMPLOYEES }\n)\n\nexport const getEmployeesSuccess = (employees) => (\n    { type: GET_EMPLOYEES_SUCCESS, payload: employees }\n)\n\nexport const getEmployeesFailure = (error) => (\n    { type: GET_EMPLOYEES_FAILURE, payload: error }\n)\n\nexport const fetchAllEmployees = () => {\n    return (dispatch) => {\n        dispatch(getEmployees())\n        fetch('http://localhost:3001/employees')\n        .then(response => response.json())\n        .then(data => {\n            dispatch(getEmployeesSuccess(data))\n        })\n        .catch(error => {\n            dispatch(getEmployeesFailure(error))\n        })\n    }\n}\n\nexport const getOneEmployee = () => (\n    { type: GET_ONE_EMPLOYEE }\n)\n\nexport const getOneEmployeeSuccess = (employee) => (\n    { type: GET_ONE_EMPLOYEE_SUCCESS, payload: employee }\n)\n\nexport const GetOneEmployeeFailure = (error) => (\n    { type: GET_ONE_EMPLOYEE_FAILURE, payload: error }\n)\n\nexport const fetchOneEmployee = (employee_id) => {\n    return (dispatch) => {\n        dispatch(getOneEmployee())\n        fetch(`http://localhost:3001/employees/${employee_id}`)\n        .then(response => response.json())\n        .then(data => {\n            dispatch(getOneEmployeeSuccess(data))\n        })\n        .catch(error => {\n            dispatch(GetOneEmployeeFailure(error))\n        })\n    }\n}\n\nexport const employeeCreatedSuccess = (employee) => (\n    { type: EMPLOYEE_CREATED_SUCCESS, payload: employee }\n)\n\nexport const employeeCreatedFailure = (error) => (\n    { type: EMPLOYEE_CREATED_FAILURE, payload: error }\n)\n\nexport const fetchPostNewEmployee = (employee) => {\n    return (dispatch) => {\n        fetch('http://localhost:3001/employees', {\n            method: 'POST',\n            body: JSON.stringify(employee),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(response => response.json())\n        .then(data => {\n            dispatch(employeeCreatedSuccess(data))\n        })\n        .catch(error => {\n            dispatch(employeeCreatedFailure(error))\n        })\n    }\n}\n\nexport const deleteOneEmployee = (employee_id) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3001/employees/${employee_id}`, {\n            method: \"DELETE\",\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(dispatch(fetchAllEmployees()))\n    }\n}"]},"metadata":{},"sourceType":"module"}